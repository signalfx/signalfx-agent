monitors:
- dimensions:
  doc:
  metrics:
    asserts.regular:
      description: MongoDB process measurment ASSERT_REGULAR. The average rate of regular asserts raised per second over the selected sample period.
      default: false
      type: counter
      group: mongodbmetrics
    asserts.warning:
      description: MongoDB process measurment ASSERT_WARNING. The average rate of warnings per second over the selected sample period.
      default: false
      type: counter
      group: mongodbmetrics
    asserts.msg:
      description: MongoDB process measurment ASSERT_MSG. The average rate of message asserts per second over the selected sample period. These are internal server errors that have a well defined text string. Stack traces are logged for these.
      default: false
      type: counter
      group: mongodbmetrics
    asserts.user:
      description: MongoDB process measurment ASSERT_USER. The average rate of user asserts per second over the selected sample period. These are errors that can be generated by a user such as out of disk space or duplicate key.
      default: false
      type: counter
      group: mongodbmetrics
#    counter.backgroundFlushing.flushes:
#      description: Number of times the database has been flushed
#      default: true
#      type: gauge
    cache.bytes.readInto:
      description: MongoDB process measurment CACHE_BYTES_READ_INTO. The average rate of bytes per second read into WiredTiger's cache over the selected sample period.
      default: false
      type: counter
      group: WiredTiger
    cache.bytes.writtenFrom:
      description: MongoDB process measurment CACHE_BYTES_WRITTEN_FROM. The average rate of bytes per second written from WiredTiger's cache over the selected sample period.
      default: false
      type: counter
      group: WiredTiger
    cache.dirtyBytes:
      description: MongoDB process measurment CACHE_DIRTY_BYTES. The number of tracked dirty bytes currently in the WiredTiger cache.
      default: false
      type: gauge
      group: WiredTiger
    cache.usedBytes:
      description: MongoDB process measurment CACHE_USED_BYTES. The number of bytes currently in the WiredTiger cache.
      default: false
      type: gauge
      group: WiredTiger
    opcounter.command:
      description: MongoDB process measurment OPCOUNTER_CMD. The average rate of commands performed per second over the selected sample period.
      default: false
      type: counter
      group: mongodbmetrics
    opcounter.delete:
      description: MongoDB process measurment OPCOUNTER_DELETE. The average rate of deletes performed per second over the selected sample period.
      default: true
      type: counter
      group: mongodbmetrics
    opcounter.getmore:
      description: MongoDB process measurment OPCOUNTER_GETMORE. The average rate of getMores performed per second on any cursor over the selected sample period. On a primary, this number can be high even if the query count is low as the secondaries "getMore" from the primary often as part of replication.
      default: false
      type: counter
      group: mongodbmetrics
    opcounter.insert:
      description: MongoDB process measurment OPCOUNTER_INSERT. The average rate of inserts performed per second over the selected sample period.
      default: true
      type: counter
      group: mongodbmetrics
    opcounter.query:
      description: MongoDB process measurment OPCOUNTER_QUERY. The average rate of queries performed per second over the selected sample period.
      default: true
      type: counter
      group: mongodbmetrics
    opcounter.update:
      description: MongoDB process measurment OPCOUNTER_UPDATE. The average rate of updates performed per second over the selected sample period.
      default: true
      type: counter
      group: mongodbmetrics
    opcounterRepl.command:
      description: MongoDB process measurment OPCOUNTER_REPL_CMD. The average rate of replicated commands applied per second over the selected sample period.
      default: false
      type: counter
      group: mongodbmetrics
    opcounterRepl.delete:
      description: MongoDB process measurment OPCOUNTER_REPL_DELETE. The average rate of replicated deletes applied per second over the selected sample period
      default: false
      type: counter
      group: mongodbmetrics
    opcounterRepl.insert:
      description: MongoDB process measurment OPCOUNTER_REPL_INSERT. The average rate of replicated inserts applied per second over the selected sample period
      default: false
      type: counter
      group: mongodbmetrics
    opcounterRepl.update:
      description: MongoDB process measurment OPCOUNTER_REPL_UPDATE. The average rate of replicated updates applied per second over the selected sample period
      default: false
      type: counter
      group: mongodbmetrics
    connections.current:
      description: MongoDB process measurment CONNECTIONS. The number of currently active connections to this server. A stack is allocated per connection; thus very many connections can result in significant RAM usage.
      default: true
      type: gauge
      group: mongodbmetrics
    cursors.totalOpen:
      description: MongoDB process measurment CURSORS_TOTAL_OPEN. The number of cursors that the server is maintaining for clients. Because MongoDB exhausts unused cursors, typically this value is small or zero. However, if there is a queue, stale tailable cursors, or a large number of operations this value may rise.
      default: false
      type: gauge
      group: mongodbmetrics
    cursors.timedOut:
      description: MongoDB process measurment CURSORS_TOTAL_TIMED_OUT. The average rate of cursors that have timed out per second over the selected sample period.
      default: false
      type: counter
      group: mongodbmetrics
    storageSize:
      description: MongoDB process measurment DB_STORAGE_TOTAL. Sum total on-disk storage space allocated for document storage across all databases.
      default: true
      type: gauge
      group: mongodbmetrics
    dataSize:
      description: MongoDB process measurment DB_DATA_SIZE_TOTAL. Sum total size in bytes of the document data (including the padding factor) across all databases.
      default: true
      type: gauge
      group: mongodbmetrics
    indexSize:
      description: MongoDB process measurment DB_INDEX_SIZE_TOTAL. Sum total size in bytes of the index data data across all databases.
      default: true
      type: gauge
      group: mongodbmetrics
    document.metrics.returned:
      description: MongoDB process measurment DOCUMENT_METRICS_RETURNED. The average rate per second of documents returned by queries over the selected sample period.
      default: false
      type: counter
      group: mongodbmetrics
    document.metrics.inserted:
      description: MongoDB process measurment DOCUMENT_METRICS_INSERTED. The average rate per second of documents inserted over the selected sample period.
      default: false
      type: counter
      group: mongodbmetrics
    document.metrics.updated:
      description: MongoDB process measurment DOCUMENT_METRICS_UPDATED. The average rate per second of documents updated over the selected sample period.
      default: false
      type: counter
      group: mongodbmetrics
    document.metrics.deleted:
      description: MongoDB process measurment DOCUMENT_METRICS_DELETED. The average rate per second of documents deleted over the selected sample period.
      default: false
      type: counter
      group: mongodbmetrics
    memory.mapped:
      description: MongoDB process measurment MEMORY_MAPPED. As MMAPv1 memory maps all the data files, this number is likely similar to your total database(s) size. WiredTiger does not use memory mapped files, so this should be 0.
      default: true
      type: gauge
      group: mongodbmetrics
    memory.resident:
      description: |
        MongoDB process measurment MEMORY_RESIDENT.
        The number of megabytes resident. MMAPv1: It is typical over time, on a dedicated database server, for this
        number to approach the amount of physical ram on the box. WiredTiger: In a standard deployment resident is the
        amount of memory used by the WiredTiger cache plus the memory dedicated to other in memory structures used by
        the mongod process. By default, mongod with WiredTiger reserves 50% of the total physical memory on the server
        for the cache and at steady state, WiredTiger tries to limit cache usage to 80% of that total. For example,
        if a server has 16GB of memory, WiredTiger will assume it can use 8GB for cache and at steady state should use
        about 6.5GB.
      default: true
      type: gauge
      group: mongodbmetrics
    memory.virtual:
      description: |
        MongoDB process measurment MEMORY_VIRTUAL.
        The virtual megabytes for the mongod process. MMAPv1: Generally virtual should be a little larger than mapped
        (or 2x with --journal), but if virtual is many gigabytes larger, it indicates that excessive memory is being
        used by other aspects than the memory mapping of files -- that would be bad/suboptimal. The most common case of
        usage of a high amount of memory for non-mapped is that there are very many connections to the database. Each
        connection has a thread stack and the memory for those stacks can add up to a considerable amount.
        WiredTiger: Generally virtual should be a little larger than mapped, but if virtual is many gigabytes larger,
        it indicates that excessive memory is being used by other aspects than the memory mapping of files \u2013 that
        would be bad/suboptimal. The most common case of usage of a high amount of memory for non-mapped is that there
        are very many connections to the database. Each connection has a thread stack and the memory for those stacks
        can add up to a considerable amount.
      default: true
      type: gauge
      group: mongodbmetrics
    network.bytesIn:
      description: MongoDB process measurment NETWORK_BYTES_IN. The average rate of physical (after any wire compression) bytes sent to this database server per second over the selected sample period
      default: true
      type: gauge
      group: mongodbmetrics
    network.bytesOut:
      description: MongoDB process measurment NETWORK_BYTES_OUT. The average rate of physical (after any wire compression) bytes sent from this database server per second over the selected sample period
      default: true
      type: gauge
      group: mongodbmetrics
    network.numRequests:
      description: MongoDB process measurment NETWORK_NUM_REQUESTS. The average rate of requests sent to this database server per second over the selected sample period
      default: true
      type: counter
      group: mongodbmetrics
    op.execution.time.reads:
      description: MongoDB process measurment OP_EXECUTION_TIME_READS. The average execution time in milliseconds per read operation over the selected sample period.
      default: false
      type: gauge
      group: mongodbmetrics
    op.execution.time.writes:
      description: MongoDB process measurment OP_EXECUTION_TIME_WRITES. The average execution time in milliseconds per write operation over the selected sample period.
      default: false
      type: gauge
      group: mongodbmetrics
    op.execution.time.commands:
      description: MongoDB process measurment OP_EXECUTION_TIME_COMMANDS. The average execution time in milliseconds per command operation over the selected sample period.
      default: false
      type: gauge
      group: mongodbmetrics
#    op.execution.time.writeMinusFlowControl:
#      description: The average execution time in milliseconds per write operation over the selected sample period once the impact of flow control is subtracted from the total.
#      default: false
#      type: gauge
#      group: mongodbmetrics
    oplog.rate:
      description: MongoDB process measurment OPLOG_RATE_GB_PER_HOUR. The average rate of gigabytes of oplog the primary generates per hour.
      default: false
      type: gauge
      group: mongodbmetrics
    oplog.master.lagTimeDiff:
      description: MongoDB process measurment OPLOG_MASTER_LAG_TIME_DIFF. The replication headroom which is the difference between the primary's replication oplog window (i.e. latest minus oldest oplog entry time) and the secondary's replication lag. A secondary can go into RECOVERING if this value goes to zero.
      default: false
      type: gauge
      group: mongodbmetrics
    oplog.slave.lagMasterTime:
      description: MongoDB process measurment OPLOG_SLAVE_LAG_MASTER_TIME. The replication lag. The approximate number of seconds the secondary is behind the primary in write application. Only accurate if the lag is larger than 1-2 seconds, as the precision of this statistic is limited.
      default: false
      type: gauge
      group: mongodbmetrics
    oplog.master.time:
      description: MongoDB process measurment OPLOG_MASTER_TIME. The replication oplog window. The approximate number of hours available in the primary's replication oplog. If a secondary is behind real-time by more than this amount, it cannot catch up and will require a full resync.
      default: false
      type: gauge
      group: mongodbmetrics
    # ------------------------------------------------------------------------------------------------------------------
    pageFaults:
      description: MongoDB process measurment EXTRA_INFO_PAGE_FAULTS. The average rate of page faults on this process per second over the selected sample period. In non-Windows environments this is hard page faults only.
      default: true
      type: counter
      group: mongodbmetrics
    # ------------------------------------------------------------------------------------------------------------------
    query.executor.scanned:
      description: MongoDB process measurment QUERY_EXECUTOR_SCANNED. The average rate per second over the selected sample period of index items scanned during queries and query-plan evaluation. This rate is driven by the same value as totalKeysExamined in the output of explain().
      default: false
      type: counter
      group: mongodbmetrics
    query.executor.scannedObjects:
      description: MongoDB process measurment QUERY_EXECUTOR_SCANNED_OBJECTS. The average rate per second over the selected sample period of documents scanned during queries and query-plan evaluation. This rate is driven by the same value as totalDocsExamined in the output of explain().
      default: false
      type: counter
      group: mongodbmetrics
    query.targeting.scannedPerReturned:
      description: MongoDB process measurment QUERY_TARGETING_SCANNED_PER_RETURNED. The ratio of the number of index items scanned to the number of documents returned by queries, since the previous data point for the selected sample period. A value of 1.0 means all documents returned exactly match query criteria for the sample period. A value of 100 means on average for the sample period, a query scans 100 documents to find one that's returned.
      default: false
      type: gauge
      group: mongodbmetrics
    query.targeting.scannedObjectsPerReturned:
      description: MongoDB process measurment QUERY_TARGETING_SCANNED_OBJECTS_PER_RETURNED. The ratio of the number of documents scanned to the number of documents returned by queries, since the previous data point for the selected sample period.
      default: false
      type: gauge
      group: mongodbmetrics
    # ------------------------------------------------------------------------------------------------------------------
    globalLock.currentQueue.total:
      description: MongoDB process measurment GLOBAL_LOCK_CURRENT_QUEUE_TOTAL. The number of operations queued waiting for any lock.
      default: false
      type: gauge
      group: mongodbmetrics
    globalLock.currentQueue.readers:
      description: MongoDB process measurment GLOBAL_LOCK_CURRENT_QUEUE_READERS. The number of operations queued waiting for a read lock.
      default: true
      type: gauge
      group: mongodbmetrics
    globalLock.currentQueue.writers:
      description: MongoDB process measurment GLOBAL_LOCK_CURRENT_QUEUE_WRITERS. The number of operations queued waiting for a write lock.
      default: true
      type: gauge
      group: mongodbmetrics
    # ------------------------------------------------------------------------------------------------------------------
    tickets.available.reads:
      description: MongoDB process measurment TICKETS_AVAILABLE_READS. The number of read tickets available to the WiredTiger storage engine. Read tickets represent the number of concurrent read operations allowed into the storage engine. When this value reaches zero new read requests may queue until a read ticket becomes available.
      default: false
      type: gauge
      group: WiredTiger
    tickets.available.write:
      description: MongoDB process measurment TICKETS_AVAILABLE_WRITE. The number of write tickets available to the WiredTiger storage engine. Write tickets represent the number of concurrent write operations allowed into the storage engine. When this value reaches zero new write requests may queue until a write ticket becomes available.
      default: false
      type: gauge
      group: WiredTiger
    disk.partition.iops.read:
      description: MongoDB process measurment DISK_PARTITION_IOPS_READ. The read throughput of I/O operations per second for the disk partition used for MongoDB.
      default: false
      type: counter
      group: hardwaremetrics
    disk.partition.iops.write:
      description: MongoDB process measurment DISK_PARTITION_IOPS_WRITE. The write throughput of I/O operations per second for the disk partition used for MongoDB.
      default: false
      type: counter
      group: hardwaremetrics
    disk.partition.iops.total:
      description: MongoDB process measurment DISK_PARTITION_IOPS_TOTAL. The total throughput of I/O operations per second for the disk partition used for MongoDB.
      default: false
      type: counter
      group: hardwaremetrics
    disk.partition.latency.read:
      description: MongoDB process measurment DISK_PARTITION_LATENCY_READ. The read latency in milliseconds of the disk partition used by MongoDB.
      default: false
      type: gauge
      group: hardwaremetrics
    disk.partition.latency.write:
      description: MongoDB process measurment DISK_PARTITION_LATENCY_WRITE. The write latency in milliseconds of the disk partition used by MongoDB.
      default: false
      type: gauge
      group: hardwaremetrics
    disk.partition.space.free:
      description: MongoDB process measurment DISK_PARTITION_SPACE_FREE. The total bytes of free disk space on the disk partition used by MongoDB.
      default: false
      type: gauge
      group: hardwaremetrics
    disk.partition.space.percentFree:
      description: MongoDB process measurment DISK_PARTITION_SPACE_PERCENT_FREE. The percent of free disk space on the partition used by MongoDB.
      default: false
      type: gauge
      group: hardwaremetrics
    disk.partition.space.used:
      description: MongoDB process measurment DISK_PARTITION_SPACE_USED. The total bytes of used disk space on the partition that runs MongoDB.
      default: false
      type: gauge
      group: hardwaremetrics
    disk.partition.space.percentUsed:
      description: MongoDB process measurment DISK_PARTITION_SPACE_PERCENT_USED. The percent of used disk space on the partition that runs MongoDB.
      default: false
      type: gauge
      group: hardwaremetrics
    disk.partition.utilization:
      description: MongoDB process measurment DISK_PARTITION_UTILIZATION. The percentage of time during which requests are being issued to and serviced by the partition. This includes requests from any process, not just MongoDB processes.
      default: false
      type: gauge
      group: hardwaremetrics
    process.cpu.kernel:
      description: MongoDB process measurment PROCESS_CPU_KERNEL. The percentage of time the CPU spent servicing operating system calls for this MongoDB process. For servers with more than 1 CPU core, this value can exceed 100%.
      default: false
      type: gauge
      group: hardwaremetrics
    process.cpu.user:
      description: MongoDB process measurment PROCESS_CPU_USER. The percentage of time the CPU spent servicing this MongoDB process. For servers with more than 1 CPU core, this value can exceed 100%.
      default: false
      type: gauge
      group: hardwaremetrics
    process.normalized.cpu.user:
      description: MongoDB process measurment PROCESS_NORMALIZED_CPU_USER. The percentage of time the CPU spent servicing this MongoDB process, scaled to a range of 0-100% by dividing by the number of CPU cores.
      default: false
      type: gauge
      group: hardwaremetrics
    process.normalized.cpu.kernel:
      description: MongoDB process measurment PROCESS_NORMALIZED_CPU_KERNEL. The percentage of time the CPU spent servicing operating system calls for this MongoDB process, scaled to a range of 0-100% by dividing by the number of CPU cores.
      default: false
      type: gauge
      group: hardwaremetrics
    process.normalized.cpu.childrenUser:
      description: MongoDB process measurment PROCESS_NORMALIZED_CPU_CHILDREN_USER. The percentage of time the CPU spent servicing this MongoDB process's children, scaled to a range of 0-100% by dividing by the number of CPU cores.
      default: false
      type: gauge
      group: hardwaremetrics
    process.normalized.cpu.childrenKernel:
      description: MongoDB process measurment PROCESS_NORMALIZED_CPU_CHILDREN_KERNEL. The percentage of time the CPU spent servicing operating system calls for this MongoDB process's children, scaled to a range of 0-100% by dividing by the number of CPU cores.
      default: false
      type: gauge
      group: hardwaremetrics
    system.normalized.cpu.user:
      description: MongoDB process measurment SYSTEM_NORMALIZED_CPU_USER. The percentage of time the CPU spent servicing all user applications (not just MongoDB processes). It is scaled to a range of 0-100% by dividing by the number of CPU cores.
      default: false
      type: gauge
      group: hardwaremetrics
    system.normalized.cpu.kernel:
      description: MongoDB process measurment SYSTEM_NORMALIZED_CPU_KERNEL. The percentage of time the CPU spent servicing operating system calls from all processes. It is scaled to a range of 0-100% by dividing by the number of CPU cores.
      default: false
      type: gauge
      group: hardwaremetrics
    system.normalized.cpu.nice:
      description: MongoDB process measurment SYSTEM_NORMALIZED_CPU_NICE. The percentage of time the CPU spent occupied by all processes with a positive nice value. It is scaled to a range of 0-100% by dividing by the number of CPU cores.
      default: false
      type: gauge
      group: hardwaremetrics
    system.normalized.cpu.iowait:
      description: MongoDB process measurment SYSTEM_NORMALIZED_CPU_IOWAIT. The percentage of time the CPU spent waiting for IO operations to complete. It is scaled to a range of 0-100% by dividing by the number of CPU cores.
      default: false
      type: gauge
      group: hardwaremetrics
    system.normalized.cpu.irq:
      description: MongoDB process measurment SYSTEM_NORMALIZED_CPU_IRQ. The percentage of time the CPU spent performing hardware interrupts. It is scaled to a range of 0-100% by dividing by the number of CPU cores.
      default: false
      type: gauge
      group: hardwaremetrics
    system.normalized.cpu.softirq:
      description: MongoDB process measurment SYSTEM_NORMALIZED_CPU_SOFTIRQ. The percentage of time the CPU spent performing software interrupts. It is scaled to a range of 0-100% by dividing by the number of CPU cores.
      default: false
      type: gauge
      group: hardwaremetrics
    system.normalized.cpu.guest:
      description: MongoDB process measurment SYSTEM_NORMALIZED_CPU_GUEST. The percentage of time the CPU spent servicing guest, which is included in user. It is scaled to a range of 0-100% by dividing by the number of CPU cores.
      default: false
      type: gauge
      group: hardwaremetrics
    system.normalized.cpu.steal:
      description: MongoDB process measurment SYSTEM_NORMALIZED_CPU_STEAL. The percentage of time the CPU had something runnable, but the hypervisor chose to run something else. It is scaled to a range of 0-100% by dividing by the number of CPU cores.
      default: false
      type: gauge
      group: hardwaremetrics
    system.cpu.user:
      description: MongoDB process measurment SYSTEM_CPU_USER. The percentage of time the CPU spent servicing all user applications (not just MongoDB processes). For servers with more than 1 CPU core, this value can exceed 100%.
      default: false
      type: gauge
      group: hardwaremetrics
    system.cpu.kernel:
      description: MongoDB process measurment SYSTEM_CPU_KERNEL. The percentage of time the CPU spent servicing operating system calls from all processes. For servers with more than 1 CPU core, this value can exceed 100%.
      default: false
      type: gauge
      group: hardwaremetrics
    system.cpu.nice:
      description: MongoDB process measurment SYSTEM_CPU_NICE. The percentage of time the CPU spent occupied by all processes with a positive nice value. For servers with more than 1 CPU core, this value can exceed 100%.
      default: false
      type: gauge
      group: hardwaremetrics
    system.cpu.iowait:
      description: MongoDB process measurment SYSTEM_CPU_IOWAIT. The percentage of time the CPU spent waiting for IO operations to complete. For servers with more than 1 CPU core, this value can exceed 100%.
      default: false
      type: gauge
      group: hardwaremetrics
    system.cpu.irq:
      description: MongoDB process measurment SYSTEM_CPU_IRQ. The percentage of time the CPU spent performing hardware interrupts. For servers with more than 1 CPU core, this value can exceed 100%.
      default: false
      type: gauge
      group: hardwaremetrics
    system.cpu.softirq:
      description: MongoDB process measurment SYSTEM_CPU_SOFTIRQ. The percentage of time the CPU spent performing software interrupts. For servers with more than 1 CPU core, this value can exceed 100%.
      default: false
      type: gauge
      group: hardwaremetrics
    system.cpu.guest:
      description: MongoDB process measurment SYSTEM_CPU_GUEST. The percentage of time the CPU spent servicing guest, which is included in user. For servers with more than 1 CPU core, this value can exceed 100%.
      default: false
      type: gauge
      group: hardwaremetrics
    system.cpu.steal:
      description: MongoDB process measurment SYSTEM_CPU_STEAL. The percentage of time the CPU had something runnable, but the hypervisor chose to run something else. For servers with more than 1 CPU core, this value can exceed 100%.
      default: false
      type: gauge
      group: hardwaremetrics
    operationsScanAndOrder:
      description: MongoDB process measurment OPERATIONS_SCAN_AND_ORDER. The average rate per second over the selected sample period of queries that return sorted results that cannot perform the sort operation using an index.
      default: false
      type: counter
      group: mongodbmetrics
  monitorType: mongodbatlas
  properties:

