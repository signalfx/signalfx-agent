monitors:
- &cadvisor
  dimensions:
    container_id:
      description: The ID of the running container
    container_image:
      description: The container image name
    container_name:
      description: The container's name as it appears in the pod spec, the same as
        container_spec_name but retained for backwards compatibility.
    container_spec_name:
      description: The container's name as it appears in the pod spec
    kubernetes_namespace:
      description: The K8s namespace the container is part of
    kubernetes_pod_name:
      description: The pod instance under which this container runs
    kubernetes_pod_uid:
      description: The UID of the pod instance under which this container runs
  doc: |
    This monitor pulls metrics directly from cadvisor, which
    conventionally runs on port 4194, but can be configured to anything.  If you
    are running on Kubernetes, consider the [kubelet-stats](./kubelet-stats.md)
    monitor because many K8s nodes do not expose cAdvisor on a network port,
    even though they are running it within Kubelet.

    If you are running containers with Docker, there is a fair amount of
    duplication with the `collectd/docker` monitor in terms of the metrics sent
    (under distinct metric names) so you may want to consider not enabling the
    Docker monitor in a K8s environment, or else use filtering to whitelist only
    certain metrics.  Note that this will cause the built-in Docker dashboards
    to be blank, but container metrics will be available on the Kubernetes
    dashboards instead.
  metrics:
    container_cpu_cfs_periods:
      description: Total number of elapsed CFS enforcement intervals
      included: false
      type: counter
    container_cpu_cfs_throttled_periods:
      description: Total number of times tasks in the cgroup have been throttled
      included: false
      type: counter
    container_cpu_cfs_throttled_time:
      description: Total time duration, in nanoseconds, for which tasks in the cgroup
        have been throttled
      included: false
      type: counter
    container_cpu_percent:
      description: Cumulative cpu utilization as a percentage of the total host CPU
        available.  This metric is equivalent to `container_cpu_utilization` / <#
        of CPUs/cores on host>.
      included: false
      type: counter
    container_cpu_system_seconds_total:
      description: Cumulative system cpu time consumed in nanoseconds
      included: false
      type: counter
    container_cpu_usage_seconds_total:
      description: Cumulative cpu time consumed per cpu in nanoseconds
      included: false
      type: counter
    container_cpu_user_seconds_total:
      description: Cumulative user cpu time consumed in nanoseconds
      included: false
      type: counter
    container_cpu_utilization:
      description: 'Cumulative cpu utilization in percentages.  This is equivalent
        to "centicores", or hundreths of CPU cores consumed.  This metric is **NOT**
        normalized by the total # of cores on the system.'
      included: true
      type: counter
    container_fs_io_current:
      description: Number of I/Os currently in progress
      included: false
      type: gauge
    container_fs_io_time_seconds_total:
      description: Cumulative count of seconds spent doing I/Os
      included: false
      type: counter
    container_fs_io_time_weighted_seconds_total:
      description: Cumulative weighted I/O time in seconds
      included: false
      type: counter
    container_fs_limit_bytes:
      description: Number of bytes that the container may occupy on this filesystem
      included: false
      type: gauge
    container_fs_read_seconds_total:
      description: Cumulative count of seconds spent reading
      included: false
      type: counter
    container_fs_reads_merged_total:
      description: Cumulative count of reads merged
      included: false
      type: counter
    container_fs_reads_total:
      description: Cumulative count of reads completed
      included: false
      type: counter
    container_fs_sector_reads_total:
      description: Cumulative count of sector reads completed
      included: false
      type: counter
    container_fs_sector_writes_total:
      description: Cumulative count of sector writes completed
      included: false
      type: counter
    container_fs_usage_bytes:
      description: Number of bytes that are consumed by the container on this filesystem
      included: false
      type: gauge
    container_fs_write_seconds_total:
      description: Cumulative count of seconds spent writing
      included: false
      type: counter
    container_fs_writes_merged_total:
      description: Cumulative count of writes merged
      included: false
      type: counter
    container_fs_writes_total:
      description: Cumulative count of writes completed
      included: false
      type: counter
    container_last_seen:
      description: Last time a container was seen by the exporter
      included: false
      type: gauge
    container_memory_failcnt:
      description: Number of memory usage hits limits
      included: false
      type: counter
    container_memory_failures_total:
      description: Cumulative count of memory allocation failures
      included: true
      type: counter
    container_memory_usage_bytes:
      description: Current memory usage in bytes
      included: true
      type: gauge
    container_memory_working_set_bytes:
      description: Current working set in bytes
      included: false
      type: gauge
    container_spec_cpu_period:
      description: The number of microseconds that the [CFS scheduler](https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt)
        uses as a window when limiting container processes
      included: true
      type: gauge
    container_spec_cpu_quota:
      description: In CPU quota for the CFS process scheduler. In K8s this is equal
        to the containers's CPU limit as a fraction of 1 core and multiplied by the
        `container_spec_cpu_period`.  So if the CPU limit is `500m` (500 millicores)
        for a container and the `container_spec_cpu_period` is set to 100,000, this
        value will be 50,000.
      included: true
      type: gauge
    container_spec_cpu_shares:
      description: CPU share of the container
      included: false
      type: gauge
    container_spec_memory_limit_bytes:
      description: Memory limit for the container.
      included: true
      type: gauge
    container_spec_memory_swap_limit_bytes:
      description: Memory swap limit for the container.
      included: false
      type: gauge
    container_start_time_seconds:
      description: Start time of the container since unix epoch in seconds.
      included: false
      type: gauge
    container_tasks_state:
      description: Number of tasks in given state
      included: false
      type: gauge
    machine_cpu_cores:
      description: Number of CPU cores on the node.
      included: true
      type: gauge
    machine_cpu_frequency_khz:
      description: Node's CPU frequency.
      included: false
      type: gauge
    machine_memory_bytes:
      description: Amount of memory installed on the node.
      included: true
      type: gauge
    pod_network_receive_bytes_total:
      description: Cumulative count of bytes received
      included: true
      type: counter
    pod_network_receive_errors_total:
      description: Cumulative count of errors encountered while receiving
      included: true
      type: counter
    pod_network_receive_packets_dropped_total:
      description: Cumulative count of packets dropped while receiving
      included: false
      type: counter
    pod_network_receive_packets_total:
      description: Cumulative count of packets received
      included: false
      type: counter
    pod_network_transmit_bytes_total:
      description: Cumulative count of bytes transmitted
      included: true
      type: counter
    pod_network_transmit_errors_total:
      description: Cumulative count of errors encountered while transmitting
      included: true
      type: counter
    pod_network_transmit_packets_dropped_total:
      description: Cumulative count of packets dropped while transmitting
      included: false
      type: counter
    pod_network_transmit_packets_total:
      description: Cumulative count of packets transmitted
      included: false
      type: counter
  monitorType: cadvisor
  properties:
- <<: *cadvisor
  doc: |
    This monitor pulls cadvisor metrics through a
    Kubernetes kubelet instance via the `/stats/container` endpoint.
  monitorType: kubelet-stats
  properties:
