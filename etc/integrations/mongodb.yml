integrations:
  mongodb:
    labels:
    - app
    rule: NetworkPrivatePort == 27017
    vars:
      # The username is required for TLS Client auth and is the username 
      # associated with the client cert (this is the subject field
      # of the client cert, formatted according to RFC2253 and in the same 
      # order that was specified when creating the user in the Mongo $external 
      # database). You can get this value by running the following command: 
      # openssl x509 -in <pathToClient PEM> -inform PEM -subject -nameopt RFC2253
      Username: # required for TLS client auth
      Password:
      Databases:
      # - exampledatabase123 # specify the name of a database to monitor
      # - exampledatabase321 # specify the name of a database to monitor
      UseTLS: false # set this to true if you want to connect to Mongo using TLS/x509/SSL
      CACerts: #path to a CA cert that will be used to verify the certificate that Mongo presents
      # The following are only needed if your client requires x509 client verification
      TLSClientCert: # path to a client certificate 
      TLSClientKey: # path to the client key certificate
      TLSClientKeyPassPhrase: # passphrase for the TLSClientKey specified above
    template: |
      <Module mongodb>
        Host "{{.Host}}"
        Port {{.Port}}
        User "{{.Vars.Username}}"
        {{with .Vars.Password -}}
        Password "{{.}}"
        {{- end}}
        Database {{range $database := .Vars.Databases}} "{{$database}}" {{end}}
        Dimensions "{{.Dims}}"
        {{if .Vars.UseTLS}}
        {{with .Vars.UseTLS -}}
        UseTLS {{.}}
        {{- end}}
        {{with .Vars.CACerts -}}
        CACerts "{{.}}"
        {{- end}}
        {{with .Vars.TLSClientCert -}}
        TLSClientCert {{.}}
        {{- end}}
        {{with .Vars.TLSClientKey -}}
        TLSClientKey {{.}}
        {{- end}}
        {{with .Vars.TLSClientKeyPassPhrase -}}
        TLSClientKeyPassphrase "{{.}}"
        {{- end}}
        {{end}}
      </Module>
