default:
  image: '${DOCKER_CICD_REPO}/ci-container:python-3.9'

stages:
  - update-stage-cache
  - win-bundle-build
  - win-bundle-sign
  - win-msi-build
  - win-msi-sign
  - release
  - github-release

.sign-release-cache:
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    key:
      files:
        - scripts/signing/requirements.txt
    paths:
      - .cache/pip
  before_script:
    - pip3 install -r scripts/signing/requirements.txt

update-stage-cache:
  stage: update-stage-cache
  needs: []
  only:
    - schedules
  variables:
    PULL_CACHE: "yes"
  retry: 2
  before_script:
    - docker login -u $CIRCLECI_QUAY_USERNAME -p $CIRCLECI_QUAY_PASSWORD quay.io
  script:
    - make stage-cache

win-bundle-build:
  stage: win-bundle-build
  needs: []
  tags:
    - windows
  only:
    variables:
      - $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/
  except:
    - schedules
  variables:
    GOPATH: "C:\\Go"
    GOOS: "windows"
    GO111MODULE: "on"
  before_script:
    - choco upgrade -y golang --version 1.17.6
    - choco upgrade -y git --version 2.33.0.2
    - refreshenv
  script:
    - $env:PATH = "${env:GOPATH}\bin;C:\Program Files\Git\bin;${env:PATH}"
    - .\scripts\windows\make.ps1 bundle
  artifacts:
    paths:
      - build/SignalFxAgent-*.zip

win-bundle-sign:
  extends:
    - .sign-release-cache
  stage: win-bundle-sign
  dependencies:
    - win-bundle-build
  only:
    variables:
      - $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/
  except:
    - schedules
  retry: 2
  script:
    - scripts/signing/sign_win_agent.py $( ls build/SignalFxAgent-*.zip )
  artifacts:
    paths:
      - build/signed/SignalFxAgent-*.zip

win-msi-build:
  stage: win-msi-build
  dependencies:
    - win-bundle-sign
  tags:
    - windows
  only:
    variables:
      - $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/
  except:
    - schedules
  before_script:
    - choco upgrade -y wixtoolset --version 3.11.2
    - refreshenv
  script:
    - $env:PATH = "C:\Program Files (x86)\WiX Toolset v3.11\bin;${env:PATH}"
    - .\scripts\windows\make.ps1 build_msi -zipfile $( Resolve-Path .\build\signed\SignalFxAgent-*.zip )
  artifacts:
    paths:
      - build/SignalFxAgent-*.msi

win-msi-sign:
  extends:
    - .sign-release-cache
  stage: win-msi-sign
  dependencies:
    - win-msi-build
  only:
    variables:
      - $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/
  except:
    - schedules
  retry: 2
  script:
    - scripts/signing/sign_win_agent.py $( ls build/SignalFxAgent-*.msi )
  artifacts:
    paths:
      - build/signed/SignalFxAgent-*.msi

win-choco-release:
  stage: release
  dependencies:
    - win-msi-sign
  tags:
    - windows
  only:
    variables:
      - $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/
  except:
    - schedules
  before_script:
    - choco upgrade -y checksum --version 0.2.0
    - refreshenv
  script:
    - .\scripts\windows\make.ps1 build_choco -msifile $( Resolve-Path .\build\signed\SignalFxAgent-*.msi )
    - choco push -k $env:CHOCO_TOKEN $( Resolve-Path .\build\signalfx-agent.*.nupkg )
  artifacts:
    paths:
      - build/signalfx-agent.*.nupkg

win-docker-release:
  stage: release
  dependencies:
    - win-bundle-sign
  tags:
    - windows
  only:
    variables:
      - $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/
  except:
    - schedules
  retry: 2
  before_script:
    - docker login -u $env:CIRCLECI_QUAY_USERNAME -p $env:CIRCLECI_QUAY_PASSWORD quay.io
    - Expand-Archive -Path build\signed\SignalFxAgent-*.zip -DestinationPath tmp
    - mkdir dist
    - mv tmp\SignalFxAgent\bin\signalfx-agent.exe dist\signalfx-agent.exe
    - rm -recurse -force tmp
  script:
    - |
      $ErrorActionPreference = 'Stop'
      $IMAGE_NAME = "quay.io/signalfx/signalfx-agent"
      $IMAGE_TAG = $env:CI_COMMIT_TAG.TrimStart("v") + "-windows"
      echo "Building and pushing ${IMAGE_NAME}:${IMAGE_TAG}"
      docker build -t ${IMAGE_NAME}:${IMAGE_TAG} -f Dockerfile.windows .
      docker push ${IMAGE_NAME}:${IMAGE_TAG}
  after_script:
    - docker image prune --all --force

linux-release:
  extends:
    - .sign-release-cache
  stage: release
  needs: []
  only:
    variables:
      - $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/
  except:
    - schedules
  script:
    - docker login -u $CIRCLECI_QUAY_USERNAME -p $CIRCLECI_QUAY_PASSWORD quay.io
    - mkdir -p dist
    - |
      set -exo pipefail
      STAGE="release"
      AGENT_IMAGE_NAME="quay.io/signalfx/signalfx-agent"
      AGENT_VERSION="${CI_COMMIT_TAG#v}"
      IMAGE="${AGENT_IMAGE_NAME}:${AGENT_VERSION}"
      ./scripts/docker-cache-from  # pre-pull stage cache images
      ./scripts/release --stage $STAGE --component docker --component deb --component rpm --component bundle
      digest=$( docker inspect --format='{{.RepoDigests}}' $IMAGE | sed "s|\[.*@\(sha256:.*\)\]|\1|" )
      if [[ ! "$digest" =~ ^sha256:[A-Fa-f0-9]{64}$ ]]; then
        echo "Failed to get repo digest for $IMAGE!"
        exit 1
      fi
      echo -n "$digest" > dist/digest.txt
      docker save -o dist/image.tar $IMAGE
      mv signalfx-agent-*.tar.gz dist/
      mv packaging/deb/output/signalfx-agent_*.deb dist/
      mv packaging/rpm/output/x86_64/signalfx-agent-*.rpm dist/
  artifacts:
    paths:
      - dist

github-release:
  stage: github-release
  dependencies:
    - win-bundle-sign
    - win-msi-sign
    - linux-release
  only:
    variables:
      - $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/
  except:
    - schedules
  before_script:
    # install gh cli
    - curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg
    - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null
    - apt update
    - apt install -y gh
  script:
    - mkdir -p dist/assets/
    - mv dist/signalfx-agent-*.tar.gz dist/assets/
    - mv build/signed/SignalFxAgent-*.zip dist/assets/
    - mv build/signed/SignalFxAgent-*.msi dist/assets/
    - ./scripts/create-github-release.sh "$CI_COMMIT_TAG" "$( cat dist/digest.txt )" ./dist/assets
  artifacts:
    when: always
    paths:
      - dist/assets
