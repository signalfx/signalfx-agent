version: "{build}"

configuration:
  - Lint
  - Vet
  - Build
  - GoTest
  - IntegrationTest


image:
  - Visual Studio 2013 # windows server 2012
  - Visual Studio 2017 # windows server 2016

clone_folder: c:\signalfx-agent

environment:
  AGENT_BIN: c:\signalfx-agent\build\SignalFxAgent\bin\signalfx-agent.exe
  GOROOT: c:\Go
  GOPATH: c:\gopath
  PYTHONHOME: c:\Python36-x64
  PYTHONPATH: c:\Python36-x64
  TEST_SERVICES_DIR: c:\signalfx-agent\test-services

install:
  - rd /s /q "%GOROOT%"
  - choco install golang --version 1.12
  - set PATH=%GOPATH%\bin;%GOROOT%\bin;%PATH%
  - set PATH=%PYTHONHOME%;%PYTHONHOME%\Scripts;%PATH%
  - set GO111MODULE=on
  - go version
  - go env
  - python --version

build: Off

matrix:
  fast_finish: true
  exclude:
    - configuration: Lint
      image: Visual Studio 2017
    - configuration: Vet
      image: Visual Studio 2017
    - configuration: Build
      image: Visual Studio 2017
    - configuration: GoTest
      image: Visual Studio 2017

for:
-
  matrix:
    only: 
      - configuration: Lint

  test_script:    
  - echo Running go lint
  - go get -u golang.org/x/lint/golint
  - ps: "& { . $env:APPVEYOR_BUILD_FOLDER/scripts/windows/make.ps1; lint }"

-
  matrix:
    only:
      - configuration: Vet

  test_script:
  - echo Running go vet
  - ps: "& { . $env:APPVEYOR_BUILD_FOLDER/scripts/windows/make.ps1; vet }"

-
  matrix:
    only:
      - configuration: Build

  build_script:
    - echo Building Agent
    - ps: "$env:AGENT_VERSION = & { git rev-parse HEAD };"
    - ps: "& { . $env:APPVEYOR_BUILD_FOLDER/scripts/windows/make.ps1; signalfx-agent }"
    - ps: "ls $env:APPVEYOR_BUILD_FOLDER"

-
  matrix:
    only:
      - configuration: GoTest

  before_test:
    - echo Installing test dependencies
    - go get github.com/tebeka/go2xunit

  test_script:
    - echo Running unit tests
    - ps: "& { . $env:APPVEYOR_BUILD_FOLDER/scripts/windows/make.ps1; $env:TEST_RC=unit_test }"
    - ps: |
        $wc = New-Object 'System.Net.WebClient'
        $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\unit_results.xml))
    - ps: if ($env:TEST_RC -ne 0){ Write-Host "One or more unit tests failed!"; exit 1 }

-
  matrix:
    only:
      - configuration: IntegrationTest

  before_build:
    - echo Installing Visual C++ Compiler For Python
    - ps: "$output = (choco install --no-progress --limitoutput vcpython27 vcredist2015 vcbuildtools); echo $output"

  build_script:
    - ps: "$env:AGENT_VERSION = & { git rev-parse HEAD };"
    - echo Building Bundle
    - ps: "& { . $env:APPVEYOR_BUILD_FOLDER/scripts/windows/make.ps1; bundle }"
    - ps: ls $env:APPVEYOR_BUILD_FOLDER/build
    - echo Bundled Collectd Plugins
    - ps: ls $env:APPVEYOR_BUILD_FOLDER/build/SignalFxAgent/plugins/collectd

  before_test:
    - curl -sSLo get-pip.py https://bootstrap.pypa.io/get-pip.py
    - python get-pip.py "pip==10.0.1"
    - pip install -qq -r tests\requirements.txt
    - pytest --version

  test_script:
    - echo Running integration tests
    - set SANIC_NO_UVLOOP=true
    - ps: "& { . $env:APPVEYOR_BUILD_FOLDER/scripts/windows/make.ps1; integration_test; $env:TEST_RC=$lastexitcode }"
    - ps: |
        $wc = New-Object 'System.Net.WebClient'
        $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\integration_results.xml))
    - ps: if ($env:TEST_RC -ne 0){ Write-Host "One or more integration tests failed!"; exit 1 }

  artifacts:
    - path: integration_results.html
    # upload any agent build bundles
    - path: build/SignalFxAgent-*-win*.zip

deploy: off
