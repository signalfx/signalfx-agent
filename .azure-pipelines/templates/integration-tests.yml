parameters:
  dependsOn: ''
  displayName: ''
  jobName: ''
  vmImage: ''
  markers: '(windows or windows_only) and not deployment'

jobs:
- job: ${{ parameters.jobName }}
  displayName: ${{ parameters.displayName }}
  dependsOn: ${{ parameters.dependsOn }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  steps:
  - template: 'extract-bundle.yml'
  - template: 'install-choco.yml'
  # Install IIS for windows-iis integration test.
  - powershell: |
      choco install -y --source windowsfeatures IIS-WebServerRole
  - powershell: |
      if ((Get-Command "conda.exe" -ErrorAction SilentlyContinue) -eq $null) {
          choco install -y --no-progress --limitoutput miniconda3
          $env:PATH = "C:\tools\miniconda3\Scripts;C:\tools\miniconda3;C:\tools\miniconda3\Library\bin;$env:PATH"
          echo "##vso[task.setvariable variable=PATH]$env:PATH"
          $env:LIB = "C:\tools\miniconda3\Library\lib;$env:LIB"
          echo "##vso[task.setvariable variable=LIB]$env:LIB"
      } else {
          echo "conda already installed"
      }
      conda --version
    displayName: 'Install conda'
  - powershell: |
      conda install --yes python=3.6.7 pip=10.0.1
      python --version
      pip --version
      pip install -q -r tests\requirements.txt
      pytest --version
    displayName: 'Install pytest'
  - powershell: |
      mkdir test_output
      echo "Executing '$env:MARKERS' tests"
      pytest -n auto -m "$env:MARKERS" --verbose --junitxml=test_output/integration_results.xml --html=test_output/integration_results.html --self-contained-html tests
      if ($lastexitcode -gt 1) { throw }
    env:
      MARKERS: ${{ parameters.markers }}
    ignoreLASTEXITCODE: true
    displayName: 'Run pytest'
  - powershell: |
      choco install -y chef-client
      $env:PATH += ";C:\opscode\chef\bin"
      echo "##vso[task.setvariable variable=PATH]$env:PATH"
      mkdir c:\chef\cookbooks -ea 0
      cd c:\chef\cookbooks
      curl -outfile windows.tar.gz https://supermarket.chef.io/cookbooks/windows/versions/6.0.0/download
      tar -zxvf .\windows.tar.gz
    displayName: 'Install chef dependencies'
  - powershell: |
      .\scripts\windows\uninstall-agent.ps1
      cp -r deployments\chef c:\chef\cookbooks\signalfx_agent
      pytest -m "chef and windows_only" --verbose --junitxml=test_output/chef_results.xml --html=test_output/chef_results.html --self-contained-html tests
      if ($lastexitcode -gt 1) { throw }
    ignoreLASTEXITCODE: true
    displayName: 'Run chef tests'
  - powershell: |
      pytest -m "puppet and windows_only" --verbose --junitxml=test_output/puppet_results.xml --html=test_output/puppet_results.html --self-contained-html tests
      if ($lastexitcode -gt 1) { throw }
    ignoreLASTEXITCODE: true
    displayName: 'Run puppet tests'
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'test_output'
      artifactName: ${{ parameters.jobName }}
  - task: PublishTestResults@2
    inputs:
      searchFolder: '$(Build.SourcesDirectory)'
      testResultsFormat: 'JUnit'
      testResultsFiles: 'test_output/*.xml'
      failTaskOnFailedTests: true
