// Code generated by monitor-code-gen. DO NOT EDIT.

package client

import (
	"github.com/signalfx/golib/v3/datapoint"
	"github.com/signalfx/signalfx-agent/pkg/monitors"
)

const MonitorType = "elasticsearch"

const (
	GroupCluster             = "cluster"
	GroupIndicesCompletion   = "indices/completion"
	GroupIndicesDocs         = "indices/docs"
	GroupIndicesFielddata    = "indices/fielddata"
	GroupIndicesFilterCache  = "indices/filter-cache"
	GroupIndicesFlush        = "indices/flush"
	GroupIndicesGet          = "indices/get"
	GroupIndicesIDCache      = "indices/id-cache"
	GroupIndicesIndexing     = "indices/indexing"
	GroupIndicesMerges       = "indices/merges"
	GroupIndicesPercolate    = "indices/percolate"
	GroupIndicesQueryCache   = "indices/query-cache"
	GroupIndicesRecovery     = "indices/recovery"
	GroupIndicesRefresh      = "indices/refresh"
	GroupIndicesRequestCache = "indices/request-cache"
	GroupIndicesSearch       = "indices/search"
	GroupIndicesSegments     = "indices/segments"
	GroupIndicesStore        = "indices/store"
	GroupIndicesSuggest      = "indices/suggest"
	GroupIndicesTranslog     = "indices/translog"
	GroupIndicesWarmer       = "indices/warmer"
	GroupNodeHTTP            = "node/http"
	GroupNodeJvm             = "node/jvm"
	GroupNodeProcess         = "node/process"
	GroupNodeThreadPool      = "node/thread-pool"
	GroupNodeTransport       = "node/transport"
)

var GroupSet = map[string]bool{
	GroupCluster:             true,
	GroupIndicesCompletion:   true,
	GroupIndicesDocs:         true,
	GroupIndicesFielddata:    true,
	GroupIndicesFilterCache:  true,
	GroupIndicesFlush:        true,
	GroupIndicesGet:          true,
	GroupIndicesIDCache:      true,
	GroupIndicesIndexing:     true,
	GroupIndicesMerges:       true,
	GroupIndicesPercolate:    true,
	GroupIndicesQueryCache:   true,
	GroupIndicesRecovery:     true,
	GroupIndicesRefresh:      true,
	GroupIndicesRequestCache: true,
	GroupIndicesSearch:       true,
	GroupIndicesSegments:     true,
	GroupIndicesStore:        true,
	GroupIndicesSuggest:      true,
	GroupIndicesTranslog:     true,
	GroupIndicesWarmer:       true,
	GroupNodeHTTP:            true,
	GroupNodeJvm:             true,
	GroupNodeProcess:         true,
	GroupNodeThreadPool:      true,
	GroupNodeTransport:       true,
}

const (
	ElasticsearchClusterActivePrimaryShards                  = "elasticsearch.cluster.active-primary-shards"
	ElasticsearchClusterActiveShards                         = "elasticsearch.cluster.active-shards"
	ElasticsearchClusterActiveShardsPercent                  = "elasticsearch.cluster.active-shards-percent"
	ElasticsearchClusterDelayedUnassignedShards              = "elasticsearch.cluster.delayed-unassigned-shards"
	ElasticsearchClusterInFlightFetches                      = "elasticsearch.cluster.in-flight-fetches"
	ElasticsearchClusterInitializingShards                   = "elasticsearch.cluster.initializing-shards"
	ElasticsearchClusterNumberOfDataNodes                    = "elasticsearch.cluster.number-of-data_nodes"
	ElasticsearchClusterNumberOfNodes                        = "elasticsearch.cluster.number-of-nodes"
	ElasticsearchClusterPendingTasks                         = "elasticsearch.cluster.pending-tasks"
	ElasticsearchClusterRelocatingShards                     = "elasticsearch.cluster.relocating-shards"
	ElasticsearchClusterStatus                               = "elasticsearch.cluster.status"
	ElasticsearchClusterTaskMaxWaitTime                      = "elasticsearch.cluster.task-max-wait-time"
	ElasticsearchClusterUnassignedShards                     = "elasticsearch.cluster.unassigned-shards"
	ElasticsearchHTTPCurrentOpen                             = "elasticsearch.http.current_open"
	ElasticsearchHTTPTotalOpen                               = "elasticsearch.http.total_open"
	ElasticsearchIndicesCompletionSize                       = "elasticsearch.indices.completion.size"
	ElasticsearchIndicesDocsCount                            = "elasticsearch.indices.docs.count"
	ElasticsearchIndicesDocsDeleted                          = "elasticsearch.indices.docs.deleted"
	ElasticsearchIndicesFielddataEvictions                   = "elasticsearch.indices.fielddata.evictions"
	ElasticsearchIndicesFielddataMemorySize                  = "elasticsearch.indices.fielddata.memory-size"
	ElasticsearchIndicesFilterCacheEvictions                 = "elasticsearch.indices.filter-cache.evictions"
	ElasticsearchIndicesFilterCacheMemorySize                = "elasticsearch.indices.filter-cache.memory-size"
	ElasticsearchIndicesFlushPeriodic                        = "elasticsearch.indices.flush.periodic"
	ElasticsearchIndicesFlushTotal                           = "elasticsearch.indices.flush.total"
	ElasticsearchIndicesFlushTotalTime                       = "elasticsearch.indices.flush.total-time"
	ElasticsearchIndicesGetCurrent                           = "elasticsearch.indices.get.current"
	ElasticsearchIndicesGetExistsTime                        = "elasticsearch.indices.get.exists-time"
	ElasticsearchIndicesGetExistsTotal                       = "elasticsearch.indices.get.exists-total"
	ElasticsearchIndicesGetMissingTime                       = "elasticsearch.indices.get.missing-time"
	ElasticsearchIndicesGetMissingTotal                      = "elasticsearch.indices.get.missing-total"
	ElasticsearchIndicesGetTime                              = "elasticsearch.indices.get.time"
	ElasticsearchIndicesGetTotal                             = "elasticsearch.indices.get.total"
	ElasticsearchIndicesIDCacheMemorySize                    = "elasticsearch.indices.id-cache.memory-size"
	ElasticsearchIndicesIndexingDeleteCurrent                = "elasticsearch.indices.indexing.delete-current"
	ElasticsearchIndicesIndexingDeleteTime                   = "elasticsearch.indices.indexing.delete-time"
	ElasticsearchIndicesIndexingDeleteTotal                  = "elasticsearch.indices.indexing.delete-total"
	ElasticsearchIndicesIndexingIndexCurrent                 = "elasticsearch.indices.indexing.index-current"
	ElasticsearchIndicesIndexingIndexFailed                  = "elasticsearch.indices.indexing.index-failed"
	ElasticsearchIndicesIndexingIndexTime                    = "elasticsearch.indices.indexing.index-time"
	ElasticsearchIndicesIndexingIndexTotal                   = "elasticsearch.indices.indexing.index-total"
	ElasticsearchIndicesIndexingNoopUpdateTotal              = "elasticsearch.indices.indexing.noop-update-total"
	ElasticsearchIndicesIndexingThrottleTime                 = "elasticsearch.indices.indexing.throttle-time"
	ElasticsearchIndicesMergesAutoThrottleSize               = "elasticsearch.indices.merges.auto-throttle-size"
	ElasticsearchIndicesMergesCurrent                        = "elasticsearch.indices.merges.current"
	ElasticsearchIndicesMergesCurrentDocs                    = "elasticsearch.indices.merges.current-docs"
	ElasticsearchIndicesMergesCurrentSize                    = "elasticsearch.indices.merges.current-size"
	ElasticsearchIndicesMergesStoppedTime                    = "elasticsearch.indices.merges.stopped-time"
	ElasticsearchIndicesMergesThrottleTime                   = "elasticsearch.indices.merges.throttle-time"
	ElasticsearchIndicesMergesTotal                          = "elasticsearch.indices.merges.total"
	ElasticsearchIndicesMergesTotalDocs                      = "elasticsearch.indices.merges.total-docs"
	ElasticsearchIndicesMergesTotalSize                      = "elasticsearch.indices.merges.total-size"
	ElasticsearchIndicesMergesTotalTime                      = "elasticsearch.indices.merges.total-time"
	ElasticsearchIndicesPercolateCurrent                     = "elasticsearch.indices.percolate.current"
	ElasticsearchIndicesPercolateQueries                     = "elasticsearch.indices.percolate.queries"
	ElasticsearchIndicesPercolateTime                        = "elasticsearch.indices.percolate.time"
	ElasticsearchIndicesPercolateTotal                       = "elasticsearch.indices.percolate.total"
	ElasticsearchIndicesQueryCacheCacheCount                 = "elasticsearch.indices.query-cache.cache-count"
	ElasticsearchIndicesQueryCacheCacheSize                  = "elasticsearch.indices.query-cache.cache-size"
	ElasticsearchIndicesQueryCacheEvictions                  = "elasticsearch.indices.query-cache.evictions"
	ElasticsearchIndicesQueryCacheHitCount                   = "elasticsearch.indices.query-cache.hit-count"
	ElasticsearchIndicesQueryCacheMemorySize                 = "elasticsearch.indices.query-cache.memory-size"
	ElasticsearchIndicesQueryCacheMissCount                  = "elasticsearch.indices.query-cache.miss-count"
	ElasticsearchIndicesQueryCacheTotalCount                 = "elasticsearch.indices.query-cache.total-count"
	ElasticsearchIndicesRecoveryCurrentAsSource              = "elasticsearch.indices.recovery.current-as-source"
	ElasticsearchIndicesRecoveryCurrentAsTarget              = "elasticsearch.indices.recovery.current-as-target"
	ElasticsearchIndicesRecoveryThrottleTime                 = "elasticsearch.indices.recovery.throttle-time"
	ElasticsearchIndicesRefreshListeners                     = "elasticsearch.indices.refresh.listeners"
	ElasticsearchIndicesRefreshTotal                         = "elasticsearch.indices.refresh.total"
	ElasticsearchIndicesRefreshTotalTime                     = "elasticsearch.indices.refresh.total-time"
	ElasticsearchIndicesRequestCacheEvictions                = "elasticsearch.indices.request-cache.evictions"
	ElasticsearchIndicesRequestCacheHitCount                 = "elasticsearch.indices.request-cache.hit-count"
	ElasticsearchIndicesRequestCacheMemorySize               = "elasticsearch.indices.request-cache.memory-size"
	ElasticsearchIndicesRequestCacheMissCount                = "elasticsearch.indices.request-cache.miss-count"
	ElasticsearchIndicesSearchFetchCurrent                   = "elasticsearch.indices.search.fetch-current"
	ElasticsearchIndicesSearchFetchTime                      = "elasticsearch.indices.search.fetch-time"
	ElasticsearchIndicesSearchFetchTotal                     = "elasticsearch.indices.search.fetch-total"
	ElasticsearchIndicesSearchOpenContexts                   = "elasticsearch.indices.search.open-contexts"
	ElasticsearchIndicesSearchQueryCurrent                   = "elasticsearch.indices.search.query-current"
	ElasticsearchIndicesSearchQueryTime                      = "elasticsearch.indices.search.query-time"
	ElasticsearchIndicesSearchQueryTotal                     = "elasticsearch.indices.search.query-total"
	ElasticsearchIndicesSearchScrollCurrent                  = "elasticsearch.indices.search.scroll-current"
	ElasticsearchIndicesSearchScrollTime                     = "elasticsearch.indices.search.scroll-time"
	ElasticsearchIndicesSearchScrollTotal                    = "elasticsearch.indices.search.scroll-total"
	ElasticsearchIndicesSearchSuggestCurrent                 = "elasticsearch.indices.search.suggest-current"
	ElasticsearchIndicesSearchSuggestTime                    = "elasticsearch.indices.search.suggest-time"
	ElasticsearchIndicesSearchSuggestTotal                   = "elasticsearch.indices.search.suggest-total"
	ElasticsearchIndicesSegmentsCount                        = "elasticsearch.indices.segments.count"
	ElasticsearchIndicesSegmentsDocValuesMemorySize          = "elasticsearch.indices.segments.doc-values-memory-size"
	ElasticsearchIndicesSegmentsFixedBitSetMemorySize        = "elasticsearch.indices.segments.fixed-bit-set-memory-size"
	ElasticsearchIndicesSegmentsIndexWriterMaxMemorySize     = "elasticsearch.indices.segments.index-writer-max-memory-size"
	ElasticsearchIndicesSegmentsIndexWriterMemorySize        = "elasticsearch.indices.segments.index-writer-memory-size"
	ElasticsearchIndicesSegmentsMemorySize                   = "elasticsearch.indices.segments.memory-size"
	ElasticsearchIndicesSegmentsNormsMemorySize              = "elasticsearch.indices.segments.norms-memory-size"
	ElasticsearchIndicesSegmentsPointsMemorySize             = "elasticsearch.indices.segments.points-memory-size"
	ElasticsearchIndicesSegmentsStoredFieldMemorySize        = "elasticsearch.indices.segments.stored-field-memory-size"
	ElasticsearchIndicesSegmentsTermVectorsMemorySize        = "elasticsearch.indices.segments.term-vectors-memory-size"
	ElasticsearchIndicesSegmentsTermsMemorySize              = "elasticsearch.indices.segments.terms-memory-size"
	ElasticsearchIndicesSegmentsVersionMapMemorySize         = "elasticsearch.indices.segments.version-map-memory-size"
	ElasticsearchIndicesStoreSize                            = "elasticsearch.indices.store.size"
	ElasticsearchIndicesStoreThrottleTime                    = "elasticsearch.indices.store.throttle-time"
	ElasticsearchIndicesSuggestCurrent                       = "elasticsearch.indices.suggest.current"
	ElasticsearchIndicesSuggestTime                          = "elasticsearch.indices.suggest.time"
	ElasticsearchIndicesSuggestTotal                         = "elasticsearch.indices.suggest.total"
	ElasticsearchIndicesTranslogEarliestLastModifiedAge      = "elasticsearch.indices.translog.earliest_last_modified_age"
	ElasticsearchIndicesTranslogOperations                   = "elasticsearch.indices.translog.operations"
	ElasticsearchIndicesTranslogSize                         = "elasticsearch.indices.translog.size"
	ElasticsearchIndicesTranslogUncommittedOperations        = "elasticsearch.indices.translog.uncommitted_operations"
	ElasticsearchIndicesTranslogUncommittedSizeInBytes       = "elasticsearch.indices.translog.uncommitted_size_in_bytes"
	ElasticsearchIndicesWarmerCurrent                        = "elasticsearch.indices.warmer.current"
	ElasticsearchIndicesWarmerTotal                          = "elasticsearch.indices.warmer.total"
	ElasticsearchIndicesWarmerTotalTime                      = "elasticsearch.indices.warmer.total-time"
	ElasticsearchJvmClassesCurrentLoadedCount                = "elasticsearch.jvm.classes.current-loaded-count"
	ElasticsearchJvmClassesTotalLoadedCount                  = "elasticsearch.jvm.classes.total-loaded-count"
	ElasticsearchJvmClassesTotalUnloadedCount                = "elasticsearch.jvm.classes.total-unloaded-count"
	ElasticsearchJvmGcCount                                  = "elasticsearch.jvm.gc.count"
	ElasticsearchJvmGcOldCount                               = "elasticsearch.jvm.gc.old-count"
	ElasticsearchJvmGcOldTime                                = "elasticsearch.jvm.gc.old-time"
	ElasticsearchJvmGcTime                                   = "elasticsearch.jvm.gc.time"
	ElasticsearchJvmMemBufferPoolsDirectCount                = "elasticsearch.jvm.mem.buffer_pools.direct.count"
	ElasticsearchJvmMemBufferPoolsDirectTotalCapacityInBytes = "elasticsearch.jvm.mem.buffer_pools.direct.total_capacity_in_bytes"
	ElasticsearchJvmMemBufferPoolsDirectUsedInBytes          = "elasticsearch.jvm.mem.buffer_pools.direct.used_in_bytes"
	ElasticsearchJvmMemBufferPoolsMappedCount                = "elasticsearch.jvm.mem.buffer_pools.mapped.count"
	ElasticsearchJvmMemBufferPoolsMappedTotalCapacityInBytes = "elasticsearch.jvm.mem.buffer_pools.mapped.total_capacity_in_bytes"
	ElasticsearchJvmMemBufferPoolsMappedUsedInBytes          = "elasticsearch.jvm.mem.buffer_pools.mapped.used_in_bytes"
	ElasticsearchJvmMemHeapCommitted                         = "elasticsearch.jvm.mem.heap-committed"
	ElasticsearchJvmMemHeapMax                               = "elasticsearch.jvm.mem.heap-max"
	ElasticsearchJvmMemHeapUsed                              = "elasticsearch.jvm.mem.heap-used"
	ElasticsearchJvmMemHeapUsedPercent                       = "elasticsearch.jvm.mem.heap-used-percent"
	ElasticsearchJvmMemNonHeapCommitted                      = "elasticsearch.jvm.mem.non-heap-committed"
	ElasticsearchJvmMemNonHeapUsed                           = "elasticsearch.jvm.mem.non-heap-used"
	ElasticsearchJvmMemPoolsOldMaxInBytes                    = "elasticsearch.jvm.mem.pools.old.max_in_bytes"
	ElasticsearchJvmMemPoolsOldPeakMaxInBytes                = "elasticsearch.jvm.mem.pools.old.peak_max_in_bytes"
	ElasticsearchJvmMemPoolsOldPeakUsedInBytes               = "elasticsearch.jvm.mem.pools.old.peak_used_in_bytes"
	ElasticsearchJvmMemPoolsOldUsedInBytes                   = "elasticsearch.jvm.mem.pools.old.used_in_bytes"
	ElasticsearchJvmMemPoolsSurvivorMaxInBytes               = "elasticsearch.jvm.mem.pools.survivor.max_in_bytes"
	ElasticsearchJvmMemPoolsSurvivorPeakMaxInBytes           = "elasticsearch.jvm.mem.pools.survivor.peak_max_in_bytes"
	ElasticsearchJvmMemPoolsSurvivorPeakUsedInBytes          = "elasticsearch.jvm.mem.pools.survivor.peak_used_in_bytes"
	ElasticsearchJvmMemPoolsSurvivorUsedInBytes              = "elasticsearch.jvm.mem.pools.survivor.used_in_bytes"
	ElasticsearchJvmMemPoolsYoungMaxInBytes                  = "elasticsearch.jvm.mem.pools.young.max_in_bytes"
	ElasticsearchJvmMemPoolsYoungPeakMaxInBytes              = "elasticsearch.jvm.mem.pools.young.peak_max_in_bytes"
	ElasticsearchJvmMemPoolsYoungPeakUsedInBytes             = "elasticsearch.jvm.mem.pools.young.peak_used_in_bytes"
	ElasticsearchJvmMemPoolsYoungUsedInBytes                 = "elasticsearch.jvm.mem.pools.young.used_in_bytes"
	ElasticsearchJvmThreadsCount                             = "elasticsearch.jvm.threads.count"
	ElasticsearchJvmThreadsPeak                              = "elasticsearch.jvm.threads.peak"
	ElasticsearchJvmUptime                                   = "elasticsearch.jvm.uptime"
	ElasticsearchProcessCPUPercent                           = "elasticsearch.process.cpu.percent"
	ElasticsearchProcessCPUTime                              = "elasticsearch.process.cpu.time"
	ElasticsearchProcessMaxFileDescriptors                   = "elasticsearch.process.max_file_descriptors"
	ElasticsearchProcessMemTotalVirtualSize                  = "elasticsearch.process.mem.total-virtual-size"
	ElasticsearchProcessOpenFileDescriptors                  = "elasticsearch.process.open_file_descriptors"
	ElasticsearchThreadPoolActive                            = "elasticsearch.thread_pool.active"
	ElasticsearchThreadPoolCompleted                         = "elasticsearch.thread_pool.completed"
	ElasticsearchThreadPoolLargest                           = "elasticsearch.thread_pool.largest"
	ElasticsearchThreadPoolQueue                             = "elasticsearch.thread_pool.queue"
	ElasticsearchThreadPoolRejected                          = "elasticsearch.thread_pool.rejected"
	ElasticsearchThreadPoolThreads                           = "elasticsearch.thread_pool.threads"
	ElasticsearchTransportRxCount                            = "elasticsearch.transport.rx.count"
	ElasticsearchTransportRxSize                             = "elasticsearch.transport.rx.size"
	ElasticsearchTransportServerOpen                         = "elasticsearch.transport.server_open"
	ElasticsearchTransportTxCount                            = "elasticsearch.transport.tx.count"
	ElasticsearchTransportTxSize                             = "elasticsearch.transport.tx.size"
)

var MetricSet = map[string]monitors.MetricInfo{
	ElasticsearchClusterActivePrimaryShards:                  {Type: datapoint.Gauge, Group: GroupCluster},
	ElasticsearchClusterActiveShards:                         {Type: datapoint.Gauge, Group: GroupCluster},
	ElasticsearchClusterActiveShardsPercent:                  {Type: datapoint.Gauge, Group: GroupCluster},
	ElasticsearchClusterDelayedUnassignedShards:              {Type: datapoint.Gauge, Group: GroupCluster},
	ElasticsearchClusterInFlightFetches:                      {Type: datapoint.Gauge, Group: GroupCluster},
	ElasticsearchClusterInitializingShards:                   {Type: datapoint.Gauge, Group: GroupCluster},
	ElasticsearchClusterNumberOfDataNodes:                    {Type: datapoint.Gauge, Group: GroupCluster},
	ElasticsearchClusterNumberOfNodes:                        {Type: datapoint.Gauge, Group: GroupCluster},
	ElasticsearchClusterPendingTasks:                         {Type: datapoint.Gauge, Group: GroupCluster},
	ElasticsearchClusterRelocatingShards:                     {Type: datapoint.Gauge, Group: GroupCluster},
	ElasticsearchClusterStatus:                               {Type: datapoint.Gauge, Group: GroupCluster},
	ElasticsearchClusterTaskMaxWaitTime:                      {Type: datapoint.Gauge, Group: GroupCluster},
	ElasticsearchClusterUnassignedShards:                     {Type: datapoint.Gauge, Group: GroupCluster},
	ElasticsearchHTTPCurrentOpen:                             {Type: datapoint.Gauge, Group: GroupNodeHTTP},
	ElasticsearchHTTPTotalOpen:                               {Type: datapoint.Counter, Group: GroupNodeHTTP},
	ElasticsearchIndicesCompletionSize:                       {Type: datapoint.Gauge, Group: GroupIndicesCompletion},
	ElasticsearchIndicesDocsCount:                            {Type: datapoint.Gauge, Group: GroupIndicesDocs},
	ElasticsearchIndicesDocsDeleted:                          {Type: datapoint.Gauge, Group: GroupIndicesDocs},
	ElasticsearchIndicesFielddataEvictions:                   {Type: datapoint.Counter, Group: GroupIndicesFielddata},
	ElasticsearchIndicesFielddataMemorySize:                  {Type: datapoint.Gauge, Group: GroupIndicesFielddata},
	ElasticsearchIndicesFilterCacheEvictions:                 {Type: datapoint.Counter, Group: GroupIndicesFilterCache},
	ElasticsearchIndicesFilterCacheMemorySize:                {Type: datapoint.Gauge, Group: GroupIndicesFilterCache},
	ElasticsearchIndicesFlushPeriodic:                        {Type: datapoint.Gauge, Group: GroupIndicesFlush},
	ElasticsearchIndicesFlushTotal:                           {Type: datapoint.Counter, Group: GroupIndicesFlush},
	ElasticsearchIndicesFlushTotalTime:                       {Type: datapoint.Counter, Group: GroupIndicesFlush},
	ElasticsearchIndicesGetCurrent:                           {Type: datapoint.Gauge, Group: GroupIndicesGet},
	ElasticsearchIndicesGetExistsTime:                        {Type: datapoint.Counter, Group: GroupIndicesGet},
	ElasticsearchIndicesGetExistsTotal:                       {Type: datapoint.Counter, Group: GroupIndicesGet},
	ElasticsearchIndicesGetMissingTime:                       {Type: datapoint.Counter, Group: GroupIndicesGet},
	ElasticsearchIndicesGetMissingTotal:                      {Type: datapoint.Counter, Group: GroupIndicesGet},
	ElasticsearchIndicesGetTime:                              {Type: datapoint.Counter, Group: GroupIndicesGet},
	ElasticsearchIndicesGetTotal:                             {Type: datapoint.Counter, Group: GroupIndicesGet},
	ElasticsearchIndicesIDCacheMemorySize:                    {Type: datapoint.Gauge, Group: GroupIndicesIDCache},
	ElasticsearchIndicesIndexingDeleteCurrent:                {Type: datapoint.Gauge, Group: GroupIndicesIndexing},
	ElasticsearchIndicesIndexingDeleteTime:                   {Type: datapoint.Counter, Group: GroupIndicesIndexing},
	ElasticsearchIndicesIndexingDeleteTotal:                  {Type: datapoint.Counter, Group: GroupIndicesIndexing},
	ElasticsearchIndicesIndexingIndexCurrent:                 {Type: datapoint.Gauge, Group: GroupIndicesIndexing},
	ElasticsearchIndicesIndexingIndexFailed:                  {Type: datapoint.Gauge, Group: GroupIndicesIndexing},
	ElasticsearchIndicesIndexingIndexTime:                    {Type: datapoint.Counter, Group: GroupIndicesIndexing},
	ElasticsearchIndicesIndexingIndexTotal:                   {Type: datapoint.Counter, Group: GroupIndicesIndexing},
	ElasticsearchIndicesIndexingNoopUpdateTotal:              {Type: datapoint.Counter, Group: GroupIndicesIndexing},
	ElasticsearchIndicesIndexingThrottleTime:                 {Type: datapoint.Counter, Group: GroupIndicesIndexing},
	ElasticsearchIndicesMergesAutoThrottleSize:               {Type: datapoint.Counter, Group: GroupIndicesMerges},
	ElasticsearchIndicesMergesCurrent:                        {Type: datapoint.Gauge, Group: GroupIndicesMerges},
	ElasticsearchIndicesMergesCurrentDocs:                    {Type: datapoint.Gauge, Group: GroupIndicesMerges},
	ElasticsearchIndicesMergesCurrentSize:                    {Type: datapoint.Gauge, Group: GroupIndicesMerges},
	ElasticsearchIndicesMergesStoppedTime:                    {Type: datapoint.Counter, Group: GroupIndicesMerges},
	ElasticsearchIndicesMergesThrottleTime:                   {Type: datapoint.Counter, Group: GroupIndicesMerges},
	ElasticsearchIndicesMergesTotal:                          {Type: datapoint.Counter, Group: GroupIndicesMerges},
	ElasticsearchIndicesMergesTotalDocs:                      {Type: datapoint.Counter, Group: GroupIndicesMerges},
	ElasticsearchIndicesMergesTotalSize:                      {Type: datapoint.Counter, Group: GroupIndicesMerges},
	ElasticsearchIndicesMergesTotalTime:                      {Type: datapoint.Counter, Group: GroupIndicesMerges},
	ElasticsearchIndicesPercolateCurrent:                     {Type: datapoint.Gauge, Group: GroupIndicesPercolate},
	ElasticsearchIndicesPercolateQueries:                     {Type: datapoint.Counter, Group: GroupIndicesPercolate},
	ElasticsearchIndicesPercolateTime:                        {Type: datapoint.Counter, Group: GroupIndicesPercolate},
	ElasticsearchIndicesPercolateTotal:                       {Type: datapoint.Counter, Group: GroupIndicesPercolate},
	ElasticsearchIndicesQueryCacheCacheCount:                 {Type: datapoint.Gauge, Group: GroupIndicesQueryCache},
	ElasticsearchIndicesQueryCacheCacheSize:                  {Type: datapoint.Gauge, Group: GroupIndicesQueryCache},
	ElasticsearchIndicesQueryCacheEvictions:                  {Type: datapoint.Counter, Group: GroupIndicesQueryCache},
	ElasticsearchIndicesQueryCacheHitCount:                   {Type: datapoint.Counter, Group: GroupIndicesQueryCache},
	ElasticsearchIndicesQueryCacheMemorySize:                 {Type: datapoint.Gauge, Group: GroupIndicesQueryCache},
	ElasticsearchIndicesQueryCacheMissCount:                  {Type: datapoint.Counter, Group: GroupIndicesRequestCache},
	ElasticsearchIndicesQueryCacheTotalCount:                 {Type: datapoint.Counter, Group: GroupIndicesQueryCache},
	ElasticsearchIndicesRecoveryCurrentAsSource:              {Type: datapoint.Gauge, Group: GroupIndicesRecovery},
	ElasticsearchIndicesRecoveryCurrentAsTarget:              {Type: datapoint.Gauge, Group: GroupIndicesRecovery},
	ElasticsearchIndicesRecoveryThrottleTime:                 {Type: datapoint.Counter, Group: GroupIndicesRecovery},
	ElasticsearchIndicesRefreshListeners:                     {Type: datapoint.Gauge, Group: GroupIndicesRefresh},
	ElasticsearchIndicesRefreshTotal:                         {Type: datapoint.Counter, Group: GroupIndicesRefresh},
	ElasticsearchIndicesRefreshTotalTime:                     {Type: datapoint.Counter, Group: GroupIndicesRefresh},
	ElasticsearchIndicesRequestCacheEvictions:                {Type: datapoint.Counter, Group: GroupIndicesRequestCache},
	ElasticsearchIndicesRequestCacheHitCount:                 {Type: datapoint.Counter, Group: GroupIndicesRequestCache},
	ElasticsearchIndicesRequestCacheMemorySize:               {Type: datapoint.Gauge, Group: GroupIndicesRequestCache},
	ElasticsearchIndicesRequestCacheMissCount:                {Type: datapoint.Counter, Group: GroupIndicesRequestCache},
	ElasticsearchIndicesSearchFetchCurrent:                   {Type: datapoint.Gauge, Group: GroupIndicesSearch},
	ElasticsearchIndicesSearchFetchTime:                      {Type: datapoint.Counter, Group: GroupIndicesSearch},
	ElasticsearchIndicesSearchFetchTotal:                     {Type: datapoint.Counter, Group: GroupIndicesSearch},
	ElasticsearchIndicesSearchOpenContexts:                   {Type: datapoint.Gauge, Group: GroupIndicesSearch},
	ElasticsearchIndicesSearchQueryCurrent:                   {Type: datapoint.Gauge, Group: GroupIndicesSearch},
	ElasticsearchIndicesSearchQueryTime:                      {Type: datapoint.Counter, Group: GroupIndicesSearch},
	ElasticsearchIndicesSearchQueryTotal:                     {Type: datapoint.Counter, Group: GroupIndicesSearch},
	ElasticsearchIndicesSearchScrollCurrent:                  {Type: datapoint.Gauge, Group: GroupIndicesSearch},
	ElasticsearchIndicesSearchScrollTime:                     {Type: datapoint.Counter, Group: GroupIndicesSearch},
	ElasticsearchIndicesSearchScrollTotal:                    {Type: datapoint.Counter, Group: GroupIndicesSearch},
	ElasticsearchIndicesSearchSuggestCurrent:                 {Type: datapoint.Gauge, Group: GroupIndicesSearch},
	ElasticsearchIndicesSearchSuggestTime:                    {Type: datapoint.Counter, Group: GroupIndicesSearch},
	ElasticsearchIndicesSearchSuggestTotal:                   {Type: datapoint.Counter, Group: GroupIndicesSearch},
	ElasticsearchIndicesSegmentsCount:                        {Type: datapoint.Gauge, Group: GroupIndicesSegments},
	ElasticsearchIndicesSegmentsDocValuesMemorySize:          {Type: datapoint.Gauge, Group: GroupIndicesSegments},
	ElasticsearchIndicesSegmentsFixedBitSetMemorySize:        {Type: datapoint.Gauge, Group: GroupIndicesSegments},
	ElasticsearchIndicesSegmentsIndexWriterMaxMemorySize:     {Type: datapoint.Gauge, Group: GroupIndicesSegments},
	ElasticsearchIndicesSegmentsIndexWriterMemorySize:        {Type: datapoint.Gauge, Group: GroupIndicesSegments},
	ElasticsearchIndicesSegmentsMemorySize:                   {Type: datapoint.Gauge, Group: GroupIndicesSegments},
	ElasticsearchIndicesSegmentsNormsMemorySize:              {Type: datapoint.Gauge, Group: GroupIndicesSegments},
	ElasticsearchIndicesSegmentsPointsMemorySize:             {Type: datapoint.Gauge, Group: GroupIndicesSegments},
	ElasticsearchIndicesSegmentsStoredFieldMemorySize:        {Type: datapoint.Gauge, Group: GroupIndicesSegments},
	ElasticsearchIndicesSegmentsTermVectorsMemorySize:        {Type: datapoint.Gauge, Group: GroupIndicesSegments},
	ElasticsearchIndicesSegmentsTermsMemorySize:              {Type: datapoint.Gauge, Group: GroupIndicesSegments},
	ElasticsearchIndicesSegmentsVersionMapMemorySize:         {Type: datapoint.Gauge, Group: GroupIndicesSegments},
	ElasticsearchIndicesStoreSize:                            {Type: datapoint.Gauge, Group: GroupIndicesStore},
	ElasticsearchIndicesStoreThrottleTime:                    {Type: datapoint.Counter, Group: GroupIndicesStore},
	ElasticsearchIndicesSuggestCurrent:                       {Type: datapoint.Gauge, Group: GroupIndicesSuggest},
	ElasticsearchIndicesSuggestTime:                          {Type: datapoint.Counter, Group: GroupIndicesSuggest},
	ElasticsearchIndicesSuggestTotal:                         {Type: datapoint.Counter, Group: GroupIndicesSuggest},
	ElasticsearchIndicesTranslogEarliestLastModifiedAge:      {Type: datapoint.Gauge, Group: GroupIndicesTranslog},
	ElasticsearchIndicesTranslogOperations:                   {Type: datapoint.Gauge, Group: GroupIndicesTranslog},
	ElasticsearchIndicesTranslogSize:                         {Type: datapoint.Gauge, Group: GroupIndicesTranslog},
	ElasticsearchIndicesTranslogUncommittedOperations:        {Type: datapoint.Gauge, Group: GroupIndicesTranslog},
	ElasticsearchIndicesTranslogUncommittedSizeInBytes:       {Type: datapoint.Gauge, Group: GroupIndicesTranslog},
	ElasticsearchIndicesWarmerCurrent:                        {Type: datapoint.Gauge, Group: GroupIndicesWarmer},
	ElasticsearchIndicesWarmerTotal:                          {Type: datapoint.Counter, Group: GroupIndicesWarmer},
	ElasticsearchIndicesWarmerTotalTime:                      {Type: datapoint.Counter, Group: GroupIndicesWarmer},
	ElasticsearchJvmClassesCurrentLoadedCount:                {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmClassesTotalLoadedCount:                  {Type: datapoint.Counter, Group: GroupNodeJvm},
	ElasticsearchJvmClassesTotalUnloadedCount:                {Type: datapoint.Counter, Group: GroupNodeJvm},
	ElasticsearchJvmGcCount:                                  {Type: datapoint.Counter, Group: GroupNodeJvm},
	ElasticsearchJvmGcOldCount:                               {Type: datapoint.Counter, Group: GroupNodeJvm},
	ElasticsearchJvmGcOldTime:                                {Type: datapoint.Counter, Group: GroupNodeJvm},
	ElasticsearchJvmGcTime:                                   {Type: datapoint.Counter, Group: GroupNodeJvm},
	ElasticsearchJvmMemBufferPoolsDirectCount:                {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemBufferPoolsDirectTotalCapacityInBytes: {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemBufferPoolsDirectUsedInBytes:          {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemBufferPoolsMappedCount:                {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemBufferPoolsMappedTotalCapacityInBytes: {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemBufferPoolsMappedUsedInBytes:          {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemHeapCommitted:                         {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemHeapMax:                               {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemHeapUsed:                              {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemHeapUsedPercent:                       {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemNonHeapCommitted:                      {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemNonHeapUsed:                           {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemPoolsOldMaxInBytes:                    {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemPoolsOldPeakMaxInBytes:                {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemPoolsOldPeakUsedInBytes:               {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemPoolsOldUsedInBytes:                   {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemPoolsSurvivorMaxInBytes:               {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemPoolsSurvivorPeakMaxInBytes:           {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemPoolsSurvivorPeakUsedInBytes:          {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemPoolsSurvivorUsedInBytes:              {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemPoolsYoungMaxInBytes:                  {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemPoolsYoungPeakMaxInBytes:              {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemPoolsYoungPeakUsedInBytes:             {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmMemPoolsYoungUsedInBytes:                 {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmThreadsCount:                             {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmThreadsPeak:                              {Type: datapoint.Gauge, Group: GroupNodeJvm},
	ElasticsearchJvmUptime:                                   {Type: datapoint.Counter, Group: GroupNodeJvm},
	ElasticsearchProcessCPUPercent:                           {Type: datapoint.Gauge, Group: GroupNodeProcess},
	ElasticsearchProcessCPUTime:                              {Type: datapoint.Counter, Group: GroupNodeProcess},
	ElasticsearchProcessMaxFileDescriptors:                   {Type: datapoint.Gauge, Group: GroupNodeProcess},
	ElasticsearchProcessMemTotalVirtualSize:                  {Type: datapoint.Counter, Group: GroupNodeProcess},
	ElasticsearchProcessOpenFileDescriptors:                  {Type: datapoint.Gauge, Group: GroupNodeProcess},
	ElasticsearchThreadPoolActive:                            {Type: datapoint.Gauge, Group: GroupNodeThreadPool},
	ElasticsearchThreadPoolCompleted:                         {Type: datapoint.Counter, Group: GroupNodeThreadPool},
	ElasticsearchThreadPoolLargest:                           {Type: datapoint.Gauge, Group: GroupNodeThreadPool},
	ElasticsearchThreadPoolQueue:                             {Type: datapoint.Gauge, Group: GroupNodeThreadPool},
	ElasticsearchThreadPoolRejected:                          {Type: datapoint.Counter, Group: GroupNodeThreadPool},
	ElasticsearchThreadPoolThreads:                           {Type: datapoint.Counter, Group: GroupNodeThreadPool},
	ElasticsearchTransportRxCount:                            {Type: datapoint.Counter, Group: GroupNodeTransport},
	ElasticsearchTransportRxSize:                             {Type: datapoint.Counter, Group: GroupNodeTransport},
	ElasticsearchTransportServerOpen:                         {Type: datapoint.Gauge, Group: GroupNodeTransport},
	ElasticsearchTransportTxCount:                            {Type: datapoint.Counter, Group: GroupNodeTransport},
	ElasticsearchTransportTxSize:                             {Type: datapoint.Counter, Group: GroupNodeTransport},
}

var DefaultMetrics = map[string]bool{
	ElasticsearchClusterActivePrimaryShards: true,
	ElasticsearchClusterActiveShards:        true,
	ElasticsearchClusterNumberOfDataNodes:   true,
	ElasticsearchClusterNumberOfNodes:       true,
	ElasticsearchClusterRelocatingShards:    true,
	ElasticsearchClusterUnassignedShards:    true,
	ElasticsearchIndicesDocsCount:           true,
	ElasticsearchIndicesDocsDeleted:         true,
	ElasticsearchIndicesGetTotal:            true,
	ElasticsearchIndicesIndexingIndexTotal:  true,
	ElasticsearchIndicesMergesCurrent:       true,
	ElasticsearchIndicesMergesTotal:         true,
	ElasticsearchIndicesSearchQueryTime:     true,
	ElasticsearchIndicesSearchQueryTotal:    true,
	ElasticsearchIndicesSegmentsCount:       true,
	ElasticsearchJvmGcTime:                  true,
	ElasticsearchJvmMemHeapCommitted:        true,
	ElasticsearchJvmMemHeapUsed:             true,
	ElasticsearchProcessOpenFileDescriptors: true,
	ElasticsearchThreadPoolRejected:         true,
}

var GroupMetricsMap = map[string][]string{
	GroupCluster: []string{
		ElasticsearchClusterActivePrimaryShards,
		ElasticsearchClusterActiveShards,
		ElasticsearchClusterActiveShardsPercent,
		ElasticsearchClusterDelayedUnassignedShards,
		ElasticsearchClusterInFlightFetches,
		ElasticsearchClusterInitializingShards,
		ElasticsearchClusterNumberOfDataNodes,
		ElasticsearchClusterNumberOfNodes,
		ElasticsearchClusterPendingTasks,
		ElasticsearchClusterRelocatingShards,
		ElasticsearchClusterStatus,
		ElasticsearchClusterTaskMaxWaitTime,
		ElasticsearchClusterUnassignedShards,
	},
	GroupIndicesCompletion: []string{
		ElasticsearchIndicesCompletionSize,
	},
	GroupIndicesDocs: []string{
		ElasticsearchIndicesDocsCount,
		ElasticsearchIndicesDocsDeleted,
	},
	GroupIndicesFielddata: []string{
		ElasticsearchIndicesFielddataEvictions,
		ElasticsearchIndicesFielddataMemorySize,
	},
	GroupIndicesFilterCache: []string{
		ElasticsearchIndicesFilterCacheEvictions,
		ElasticsearchIndicesFilterCacheMemorySize,
	},
	GroupIndicesFlush: []string{
		ElasticsearchIndicesFlushPeriodic,
		ElasticsearchIndicesFlushTotal,
		ElasticsearchIndicesFlushTotalTime,
	},
	GroupIndicesGet: []string{
		ElasticsearchIndicesGetCurrent,
		ElasticsearchIndicesGetExistsTime,
		ElasticsearchIndicesGetExistsTotal,
		ElasticsearchIndicesGetMissingTime,
		ElasticsearchIndicesGetMissingTotal,
		ElasticsearchIndicesGetTime,
		ElasticsearchIndicesGetTotal,
	},
	GroupIndicesIDCache: []string{
		ElasticsearchIndicesIDCacheMemorySize,
	},
	GroupIndicesIndexing: []string{
		ElasticsearchIndicesIndexingDeleteCurrent,
		ElasticsearchIndicesIndexingDeleteTime,
		ElasticsearchIndicesIndexingDeleteTotal,
		ElasticsearchIndicesIndexingIndexCurrent,
		ElasticsearchIndicesIndexingIndexFailed,
		ElasticsearchIndicesIndexingIndexTime,
		ElasticsearchIndicesIndexingIndexTotal,
		ElasticsearchIndicesIndexingNoopUpdateTotal,
		ElasticsearchIndicesIndexingThrottleTime,
	},
	GroupIndicesMerges: []string{
		ElasticsearchIndicesMergesAutoThrottleSize,
		ElasticsearchIndicesMergesCurrent,
		ElasticsearchIndicesMergesCurrentDocs,
		ElasticsearchIndicesMergesCurrentSize,
		ElasticsearchIndicesMergesStoppedTime,
		ElasticsearchIndicesMergesThrottleTime,
		ElasticsearchIndicesMergesTotal,
		ElasticsearchIndicesMergesTotalDocs,
		ElasticsearchIndicesMergesTotalSize,
		ElasticsearchIndicesMergesTotalTime,
	},
	GroupIndicesPercolate: []string{
		ElasticsearchIndicesPercolateCurrent,
		ElasticsearchIndicesPercolateQueries,
		ElasticsearchIndicesPercolateTime,
		ElasticsearchIndicesPercolateTotal,
	},
	GroupIndicesQueryCache: []string{
		ElasticsearchIndicesQueryCacheCacheCount,
		ElasticsearchIndicesQueryCacheCacheSize,
		ElasticsearchIndicesQueryCacheEvictions,
		ElasticsearchIndicesQueryCacheHitCount,
		ElasticsearchIndicesQueryCacheMemorySize,
		ElasticsearchIndicesQueryCacheTotalCount,
	},
	GroupIndicesRecovery: []string{
		ElasticsearchIndicesRecoveryCurrentAsSource,
		ElasticsearchIndicesRecoveryCurrentAsTarget,
		ElasticsearchIndicesRecoveryThrottleTime,
	},
	GroupIndicesRefresh: []string{
		ElasticsearchIndicesRefreshListeners,
		ElasticsearchIndicesRefreshTotal,
		ElasticsearchIndicesRefreshTotalTime,
	},
	GroupIndicesRequestCache: []string{
		ElasticsearchIndicesQueryCacheMissCount,
		ElasticsearchIndicesRequestCacheEvictions,
		ElasticsearchIndicesRequestCacheHitCount,
		ElasticsearchIndicesRequestCacheMemorySize,
		ElasticsearchIndicesRequestCacheMissCount,
	},
	GroupIndicesSearch: []string{
		ElasticsearchIndicesSearchFetchCurrent,
		ElasticsearchIndicesSearchFetchTime,
		ElasticsearchIndicesSearchFetchTotal,
		ElasticsearchIndicesSearchOpenContexts,
		ElasticsearchIndicesSearchQueryCurrent,
		ElasticsearchIndicesSearchQueryTime,
		ElasticsearchIndicesSearchQueryTotal,
		ElasticsearchIndicesSearchScrollCurrent,
		ElasticsearchIndicesSearchScrollTime,
		ElasticsearchIndicesSearchScrollTotal,
		ElasticsearchIndicesSearchSuggestCurrent,
		ElasticsearchIndicesSearchSuggestTime,
		ElasticsearchIndicesSearchSuggestTotal,
	},
	GroupIndicesSegments: []string{
		ElasticsearchIndicesSegmentsCount,
		ElasticsearchIndicesSegmentsDocValuesMemorySize,
		ElasticsearchIndicesSegmentsFixedBitSetMemorySize,
		ElasticsearchIndicesSegmentsIndexWriterMaxMemorySize,
		ElasticsearchIndicesSegmentsIndexWriterMemorySize,
		ElasticsearchIndicesSegmentsMemorySize,
		ElasticsearchIndicesSegmentsNormsMemorySize,
		ElasticsearchIndicesSegmentsPointsMemorySize,
		ElasticsearchIndicesSegmentsStoredFieldMemorySize,
		ElasticsearchIndicesSegmentsTermVectorsMemorySize,
		ElasticsearchIndicesSegmentsTermsMemorySize,
		ElasticsearchIndicesSegmentsVersionMapMemorySize,
	},
	GroupIndicesStore: []string{
		ElasticsearchIndicesStoreSize,
		ElasticsearchIndicesStoreThrottleTime,
	},
	GroupIndicesSuggest: []string{
		ElasticsearchIndicesSuggestCurrent,
		ElasticsearchIndicesSuggestTime,
		ElasticsearchIndicesSuggestTotal,
	},
	GroupIndicesTranslog: []string{
		ElasticsearchIndicesTranslogEarliestLastModifiedAge,
		ElasticsearchIndicesTranslogOperations,
		ElasticsearchIndicesTranslogSize,
		ElasticsearchIndicesTranslogUncommittedOperations,
		ElasticsearchIndicesTranslogUncommittedSizeInBytes,
	},
	GroupIndicesWarmer: []string{
		ElasticsearchIndicesWarmerCurrent,
		ElasticsearchIndicesWarmerTotal,
		ElasticsearchIndicesWarmerTotalTime,
	},
	GroupNodeHTTP: []string{
		ElasticsearchHTTPCurrentOpen,
		ElasticsearchHTTPTotalOpen,
	},
	GroupNodeJvm: []string{
		ElasticsearchJvmClassesCurrentLoadedCount,
		ElasticsearchJvmClassesTotalLoadedCount,
		ElasticsearchJvmClassesTotalUnloadedCount,
		ElasticsearchJvmGcCount,
		ElasticsearchJvmGcOldCount,
		ElasticsearchJvmGcOldTime,
		ElasticsearchJvmGcTime,
		ElasticsearchJvmMemBufferPoolsDirectCount,
		ElasticsearchJvmMemBufferPoolsDirectTotalCapacityInBytes,
		ElasticsearchJvmMemBufferPoolsDirectUsedInBytes,
		ElasticsearchJvmMemBufferPoolsMappedCount,
		ElasticsearchJvmMemBufferPoolsMappedTotalCapacityInBytes,
		ElasticsearchJvmMemBufferPoolsMappedUsedInBytes,
		ElasticsearchJvmMemHeapCommitted,
		ElasticsearchJvmMemHeapMax,
		ElasticsearchJvmMemHeapUsed,
		ElasticsearchJvmMemHeapUsedPercent,
		ElasticsearchJvmMemNonHeapCommitted,
		ElasticsearchJvmMemNonHeapUsed,
		ElasticsearchJvmMemPoolsOldMaxInBytes,
		ElasticsearchJvmMemPoolsOldPeakMaxInBytes,
		ElasticsearchJvmMemPoolsOldPeakUsedInBytes,
		ElasticsearchJvmMemPoolsOldUsedInBytes,
		ElasticsearchJvmMemPoolsSurvivorMaxInBytes,
		ElasticsearchJvmMemPoolsSurvivorPeakMaxInBytes,
		ElasticsearchJvmMemPoolsSurvivorPeakUsedInBytes,
		ElasticsearchJvmMemPoolsSurvivorUsedInBytes,
		ElasticsearchJvmMemPoolsYoungMaxInBytes,
		ElasticsearchJvmMemPoolsYoungPeakMaxInBytes,
		ElasticsearchJvmMemPoolsYoungPeakUsedInBytes,
		ElasticsearchJvmMemPoolsYoungUsedInBytes,
		ElasticsearchJvmThreadsCount,
		ElasticsearchJvmThreadsPeak,
		ElasticsearchJvmUptime,
	},
	GroupNodeProcess: []string{
		ElasticsearchProcessCPUPercent,
		ElasticsearchProcessCPUTime,
		ElasticsearchProcessMaxFileDescriptors,
		ElasticsearchProcessMemTotalVirtualSize,
		ElasticsearchProcessOpenFileDescriptors,
	},
	GroupNodeThreadPool: []string{
		ElasticsearchThreadPoolActive,
		ElasticsearchThreadPoolCompleted,
		ElasticsearchThreadPoolLargest,
		ElasticsearchThreadPoolQueue,
		ElasticsearchThreadPoolRejected,
		ElasticsearchThreadPoolThreads,
	},
	GroupNodeTransport: []string{
		ElasticsearchTransportRxCount,
		ElasticsearchTransportRxSize,
		ElasticsearchTransportServerOpen,
		ElasticsearchTransportTxCount,
		ElasticsearchTransportTxSize,
	},
}

var MonitorMetadata = monitors.Metadata{
	MonitorType:       "elasticsearch",
	DefaultMetrics:    DefaultMetrics,
	Metrics:           MetricSet,
	MetricsExhaustive: false,
	Groups:            GroupSet,
	GroupMetricsMap:   GroupMetricsMap,
	SendAll:           false,
}
