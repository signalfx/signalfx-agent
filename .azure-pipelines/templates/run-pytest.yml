parameters:
  markers: 'windows or windows_only'
  options: ''
  changesInclude: ''
  chocoPackages: ''
  python_version: '3.8.5'

steps:
- template: 'changes-include.yml'
  parameters:
    paths: ${{ parameters.changesInclude }}
- template: 'install-choco.yml'
  parameters:
    packages: ${{ parameters.chocoPackages }}
- task: UsePythonVersion@0
  inputs:
    versionSpec: ${{ parameters.python_version }}
  condition: and(ne(variables.hasChanges, 'false'), ne(variables.hasChanges, False))
- bash: |
    python -m pip install --upgrade pip==20.0.2
    pip install -r tests/requirements.txt
  displayName: 'Install pytest'
  condition: and(ne(variables.hasChanges, 'false'), ne(variables.hasChanges, False))
- powershell: |
    mkdir test_output -ea 0
    $msi_path = ""
    $nupkg_path = ""
    if (Test-Path -Path bundle) {
        $msi_path = (Resolve-Path bundle\SignalFxAgent-*.msi)
        $nupkg_path = (Resolve-Path bundle\signalfx-agent*.nupkg)
    }
    echo "Executing '$env:MARKERS' tests"
    pytest -m "$env:MARKERS" $env:OPTIONS --test-msi-path="$msi_path" --test-nupkg-path="$nupkg_path" --verbose --junitxml=test_output/test_results.xml --html=test_output/test_results.html --self-contained-html tests
    if ($lastexitcode -gt 1) { throw }
  env:
    MARKERS: ${{ parameters.markers }}
    OPTIONS: ${{ parameters.options }}
  displayName: 'Run pytest'
  condition: and(ne(variables.hasChanges, 'false'), ne(variables.hasChanges, False))
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: 'test_output'
    artifactName: $(Agent.JobName)
  condition: and(ne(variables.hasChanges, 'false'), ne(variables.hasChanges, False))
- task: PublishTestResults@2
  inputs:
    searchFolder: '$(Build.SourcesDirectory)'
    testResultsFormat: 'JUnit'
    testResultsFiles: 'test_output/*.xml'
    failTaskOnFailedTests: true
  condition: and(ne(variables.hasChanges, 'false'), ne(variables.hasChanges, False))
