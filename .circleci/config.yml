version: 2
references:
  executor: &executor
    machine:
      image: circleci/classic:201711-01

  attach_workspace: &attach_workspace
    attach_workspace:
      at: /tmp/workspace

  import_image: &import_image
    run: |
      docker load -i /tmp/workspace/image.tar

jobs:
  build:
    <<: *executor
    steps:
     - checkout
     - run: |
         set -x
         export PULL_CACHE=yes
         source scripts/common.sh
         do_docker_build signalfx-agent-dev latest dev-extras
     - run: |
         mkdir -p /tmp/workspace
         docker save -o /tmp/workspace/image.tar signalfx-agent-dev:latest
     - persist_to_workspace:
         root: /tmp/workspace
         paths:
           - image.tar

  build-windows:
    <<: *executor
    steps:
      - checkout
      - run: |
          set -x
          export PULL_CACHE=yes
          ./scripts/build-binary windows
          if [ ! -f ~/project/signalfx-agent.exe ] ; then
            echo "signalfx-agent.exe not found!"
            exit 1
          fi

      - store_test_results:
          path: ~/testresults

      - store_artifacts:
          path: ~/project/signalfx-agent.exe
          destination: /signalfx-agent.exe
         
  lint: 
    <<: *executor
    steps:
      - *attach_workspace
      - *import_image
      - run: docker run --rm signalfx-agent-dev make lint

  vet: 
    <<: *executor
    steps:
      - *attach_workspace
      - *import_image
      - run: docker run --rm signalfx-agent-dev make vet

  gotests: 
    <<: *executor
    steps:
      - *attach_workspace
      - *import_image
      - run: |
          mkdir ~/testresults
          docker run --rm \
            signalfx-agent-dev \
            bash -eo pipefail -c "make templates >/dev/null && go test -v ./... | tee /dev/stderr | go2xunit" > ~/testresults/unit.xml

      - store_test_results:
          path: ~/testresults

  docs_test: 
    <<: *executor
    steps:
      - *attach_workspace
      - *import_image
      - checkout
      - run: |
          docker run --rm \
            -v $(eval "echo -n $CIRCLE_WORKING_DIRECTORY")/.git:/go/src/github.com/signalfx/signalfx-agent/.git \
            signalfx-agent-dev \
            bash -ec "make docs && git diff --exit-code" || \
            (echo 'Autogenerated docs are not in sync with their source! If you directly edited a doc file, please move the changes to the source where the doc is generated from (use grep to find where based on existing doc content). In either case, you need to run `make docs` in the dev image and commit those changes.' && exit 1)

  integration_tests: 
    <<: *executor
    steps:
      - *attach_workspace
      - *import_image
      - run: |
          mkdir ~/testresults

          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v ~/testresults:/output signalfx-agent-dev pytest -n8 --junitxml=/output/integration_tests.xml -m "not packaging and not installer" tests

      - store_test_results:
          path: ~/testresults

  rpm_package_tests:
    <<: *executor
    steps:
      - checkout
      - run: |
          mkdir ~/testresults

          if ! scripts/changes-include-dir packaging/rpm; then
              echo "RPM packaging code has not changed, skipping tests!"
              exit 0
          fi

          sudo apt-get update && sudo apt-get install -y python3-pip
          sudo pip3 install -r tests/requirements.txt

          export PULL_CACHE=yes
          ./packaging/rpm/build

          mkdir /tmp/scratch

          pytest -n auto -m "rpm" --junitxml=~/testresults/rpm.xml ./tests/packaging

      - store_test_results:
          path: ~/testresults

      - store_artifacts:
          path: ~/project/packaging/rpm/output
          destination: /packages/

  deb_package_tests:
    <<: *executor
    steps:
      - checkout
      - run: |
          mkdir ~/testresults

          if ! scripts/changes-include-dir packaging/deb; then
              echo "Debian packaging code has not changed, skipping tests!"
              exit 0
          fi

          sudo apt-get update && sudo apt-get install -y python3-pip
          sudo pip3 install -r tests/requirements.txt

          export PULL_CACHE=yes
          ./packaging/deb/build

          mkdir /tmp/scratch

          pytest -n auto -m "deb" --junitxml=~/testresults/deb.xml ./tests/packaging

      - store_test_results:
          path: ~/testresults

      - store_artifacts:
          path: ~/project/packaging/deb/output
          destination: /packages/

  chef_tests:
    <<: *executor
    steps:
      - checkout
      - run: |
          mkdir ~/testresults

          if ! scripts/changes-include-dir deployments/chef; then
              echo "Chef cookbook code has not changed, skipping tests!"
              exit 0
          fi

          cd deployments/chef
          make dev-image
          docker run --rm \
            signalfx-agent-chef-dev \
            chef exec rspec --format RspecJunitFormatter > ~/testresults/chefspec.xml

          docker run --rm \
            signalfx-agent-chef-dev \
            foodcritic .

      - store_test_results:
          path: ~/testresults

  puppet_tests:
    <<: *executor
    steps:
      - checkout
      - run: |
          mkdir ~/testresults

          if ! scripts/changes-include-dir deployments/puppet; then
              echo "Puppet module code has not changed, skipping tests!"
              exit 0
          fi

          cd deployments/puppet
          make dev-image
          docker run --rm \
            signalfx-agent-puppet-dev \
            rspec spec --format RspecJunitFormatter > ~/testresults/puppetspec.xml

          docker run --rm \
            signalfx-agent-puppet-dev \
            puppet-lint .

      - store_test_results:
          path: ~/testresults

  salt_tests:
    <<: *executor
    steps:
      - checkout
      - run: |
          mkdir ~/testresults

          if ! scripts/changes-include-dir deployments/salt; then
              echo "Salt module code has not changed, skipping tests!"
              exit 0
          fi

          cd deployments/salt
          make dev-image
          docker run --rm \
          signalfx-agent-salt-dev salt '*' state.apply > ~/testresults/salt.out


      - store_test_results:
          path: ~/testresults

  ansible_tests:
    <<: *executor
    steps:
      - checkout
      - run: |
          mkdir ~/testresults

          if ! scripts/changes-include-dir deployments/ansible; then
              echo "Ansible playbook code has not changed, skipping tests!"
              exit 0
          fi

          cd deployments/ansible
          make dev-image
          docker run --rm \
            signalfx-agent-ansible-dev \
            ansible-playbook -i inventory example-playbook.yml --connection=local > ~/testresults/ansible.out

          docker run --rm \
            signalfx-agent-ansible-dev \
            ansible-lint .

      - store_test_results:
          path: ~/testresults

workflows:
  version: 2
  build_test:
    jobs:
     - build
     - build-windows
     - lint:
        requires:
         - build
     - vet:
        requires:
         - build
     - gotests:
        requires:
         - build
     - integration_tests:
        requires:
         - build
     - docs_test:
        requires:
         - build
     - rpm_package_tests
     - deb_package_tests
     - chef_tests
     - puppet_tests
     - salt_tests
     - ansible_tests
