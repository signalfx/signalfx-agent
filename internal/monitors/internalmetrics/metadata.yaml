monitors:
- dimensions:
  doc: |
    Emits metrics about the internal state of the
    agent.  Useful for debugging performance issues with the agent and to ensure
    the agent isn't overloaded.

    This can also scrape any HTTP endpoint that exposes metrics as a JSON array
    containing JSON-formatted SignalFx datapoint objects.  It is roughly
    analogous to the `prometheus-exporter` monitor except for SignalFx
    datapoints.

    ```yaml
    monitors:
      - type: internal-metrics
    ```
  sendAll: true
  metrics:
    sfxagent.active_monitors:
      description: The total number of monitor instances actively working
      included: false
      type: gauge
    sfxagent.active_observers:
      description: The number of observers configured and running
      included: false
      type: gauge
    sfxagent.configured_monitors:
      description: The total number of monitor configurations
      included: false
      type: gauge
    sfxagent.datapoint_channel_len:
      description: The total number of datapoints that have been emitted by monitors
        but have yet to be accepted by the writer. This number should be 0 most of
        the time.  This will max out at 3000, at which point no datapoints will be
        generated by monitors.  If it does max out, it indicates a bug or extreme
        CPU starvation of the agent.
      included: false
      type: gauge
    sfxagent.datapoint_requests_active:
      description: The total number of outstanding requests to ingest currently active.  If
        this is consistently hovering around the `writer.maxRequests` setting, that
        setting should probably be increased to give the agent more bandwidth to send
        datapoints.
      included: false
      type: gauge
    sfxagent.datapoints_filtered:
      description: The total number of datapoints that were filtered out in the writer.  This
        does not include datapoints filtered by monitor-specific filters.
      included: false
      type: cumulative
    sfxagent.datapoints_in_flight:
      description: The total number of datapoints that have been sent out in a request
        to ingest but have yet to receive confirmation from ingest that they have
        been received (i.e. the HTTP response hasn't been gotten).
      included: false
      type: gauge
    sfxagent.datapoints_received:
      description: The total number of non-filtered datapoints received by the agent
        writer since it last started.  This number should generally equal `sfxagent.datapoints_sent
        + sfxagent.datapoints_waiting + sfxagent.datapoints_in_flight`, although sampling
        timing issues might cause it to temporarily not be.
      included: false
      type: cumulative
    sfxagent.datapoints_sent:
      description: The total number of datapoints sent by the agent writer since it
        last started
      included: false
      type: cumulative
    sfxagent.datapoints_waiting:
      description: The total number of datapoints that have been accepted by the writer
        but have yet to be sent out to ingest over HTTP.  If this continues to grow
        it indicates that datapoints are not being sent out fast enough and the `writer.maxRequests`
        setting should be increased.
      included: false
      type: gauge
    sfxagent.dim_request_senders:
      description: Current number of worker goroutines active that can send dimension
        updates.
      included: false
      type: gauge
    sfxagent.dim_updates_completed:
      description: Total number of dimension property updates successfully completed
      included: false
      type: cumulative
    sfxagent.dim_updates_currently_delayed:
      description: Current number of dimension updates that are being delayed to avoid
        sending spurious updates due to flappy dimension property sets.
      included: false
      type: gauge
    sfxagent.dim_updates_dropped:
      description: Total number of dimension property updates that were dropped, due
        to an overfull buffer of dimension updates pending.
      included: false
      type: cumulative
    sfxagent.dim_updates_failed:
      description: Total number of dimension property updates that failed for some
        reason.  The failures should be logged.
      included: false
      type: cumulative
    sfxagent.dim_updates_flappy_total:
      description: Total number of dimension property updates that ended up replacing
        a dimension property set that was being delayed.
      included: false
      type: cumulative
    sfxagent.dim_updates_started:
      description: Total number of dimension property updates requests started, but
        not necessarily completed or failed.
      included: false
      type: cumulative
    sfxagent.discovered_endpoints:
      description: The number of discovered service endpoints.  This includes endpoints
        that do not have any matching monitor configuration discovery rule.
      included: false
      type: gauge
    sfxagent.events_buffered:
      description: The total number of events that have been emitted by monitors but
        have yet to be sent to SignalFx
      included: false
      type: gauge
    sfxagent.events_sent:
      description: The total number of events sent by the agent since it last started
      included: false
      type: cumulative
    sfxagent.go_frees:
      description: Total number of heap objects freed throughout the lifetime of the
        agent
      included: false
      type: cumulative
    sfxagent.go_heap_alloc:
      description: Bytes of live heap memory (memory that has been allocated but not
        freed)
      included: false
      type: gauge
    sfxagent.go_heap_idle:
      description: Bytes of memory that consist of idle spans (that is, completely
        empty spans of memory)
      included: false
      type: gauge
    sfxagent.go_heap_inuse:
      description: Size in bytes of in use spans
      included: false
      type: gauge
    sfxagent.go_heap_released:
      description: Bytes of memory that have been returned to the OS.  This is quite
        often 0.  `sfxagent.go_heap_idle - sfxagent.go_heap_release` is the memory
        that Go is retaining for future heap allocations.
      included: false
      type: gauge
    sfxagent.go_heap_sys:
      description: Virtual memory size in bytes of the agent.  This will generally
        reflect the largest heap size the agent has ever had in its lifetime.
      included: false
      type: gauge
    sfxagent.go_mallocs:
      description: Total number of heap objects allocated throughout the lifetime
        of the agent
      included: false
      type: cumulative
    sfxagent.go_next_gc:
      description: The target heap size -- GC tries to keep the heap smaller than
        this
      included: false
      type: gauge
    sfxagent.go_num_gc:
      description: The number of GC cycles that have happened in the agent since it
        started
      included: false
      type: gauge
    sfxagent.go_stack_inuse:
      description: Size in bytes of spans that have at least one goroutine stack in
        them
      included: false
      type: gauge
    sfxagent.go_total_alloc:
      description: Total number of bytes allocated to the heap throughout the lifetime
        of the agent
      included: false
      type: cumulative
    sfxgent.go_num_goroutine:
      description: Number of goroutines in the agent
      included: false
      type: gauge
  monitorType: internal-metrics
  properties:
