monitors:
- dimensions:
  doc: |
    Monitors a Kafka instance using collectd's
    GenericJMX plugin.

    This monitor has a set of [built in MBeans
    configured](https://github.com/signalfx/signalfx-agent/tree/master/internal/monitors/collectd/kafka/mbeans.go)
    for which it pulls metrics from Kafka's JMX endpoint.

    Note that this monitor supports Kafka v0.8.2.x and above. For Kafka v1.x.x and above,
    apart from the list of default metrics, kafka.server:type=ZooKeeperClientMetrics,name=ZooKeeperRequestLatencyMs
    is a good metric to monitor since it gives an understanding of how long brokers wait for
    requests to Zookeeper to be completed. Since Zookeeper is an integral part of a Kafka cluster,
    monitoring it using the [Zookeeper
    monitor] (https://docs.signalfx.com/en/latest/integrations/agent/monitors/collectd-zookeeper.html)
    is recommended. It is also a good idea to monitor disk utilization and network metrics of
    the underlying host.

    See https://github.com/signalfx/integrations/tree/master/collectd-kafka.
  metrics:
    # Taken from genericjmx monitor. If you want to change them update genericjmx and update
    # all other monitors that use genericjmx with this same notice.
    ### BEGIN JVM METRICS ###
    gauge.jvm.threads.count:
      description: Number of JVM threads
      group: jvm
      included: true
      type: gauge
    gauge.loaded_classes:
      description: Number of classes loaded in the JVM
      group: jvm
      included: true
      type: gauge
    invocations:
      description: Total number of garbage collection events
      group: jvm
      included: true
      type: cumulative
    jmx_memory.committed:
      description: Amount of memory guaranteed to be available in bytes
      group: jvm
      included: true
      type: gauge
    jmx_memory.max:
      description: Maximum amount of memory that can be used in bytes
      group: jvm
      included: true
      type: gauge
    jmx_memory.used:
      description: Current memory usage in bytes
      group: jvm
      included: true
      type: gauge
    total_time_in_ms.collection_time:
      description: Amount of time spent garbage collecting in milliseconds
      group: jvm
      included: true
      type: cumulative
    jmx_memory.init:
      description: Amount of initial memory at startup in bytes
      group: jvm
      included: true
      type: gauge
    ### END JVM METRICS ###

    counter.kafka-bytes-in:
      description: Number of bytes received per second across all topics
      included: true
      type: cumulative
    counter.kafka-bytes-out:
      description: Number of bytes transmitted per second across all topics
      included: true
      type: cumulative
    counter.kafka-messages-in:
      description: Number of messages received per second across all topics
      included: true
      type: cumulative
    counter.kafka.fetch-consumer.total-time.count:
      description: Number of fetch requests from consumers per second across all partitions
      included: true
      type: cumulative
    counter.kafka.fetch-follower.total-time.count:
      description: Number of fetch requests from followers per second across all partitions
      included: false
      type: cumulative
    gauge.kafka.produce.total-time.99th:
      description: 99th percentile of time in milliseconds to process produce requests
      included: true
      type: gauge
    counter.kafka.produce.total-time.count:
      description: Number of producer requests
      included: true
      type: cumulative
    gauge.kafka.produce.total-time.median:
      description: Median time it takes to process a produce request
      included: true
      type: gauge
    gauge.kafka-active-controllers:
      description: Specifies if the broker an active controller
      included: true
      type: gauge
    gauge.kafka.logs.flush-time.99th:
      description: 99th percentile of time in milliseconds to flush logs
      included: false
      type: gauge
    counter.kafka.logs.flush-time.count:
      description: Number of log flushes
      included: false
      type: cumulative
    gauge.kafka.logs.flush-time.median:
      description: Median time it takes to flush logs
      included: false
      type: gauge
    gauge.kafka-request-queue:
      description: Number of requests in the request queue across all partitions on
        the broker
      included: true
      type: gauge
    gauge.kafka-underreplicated-partitions:
      description: Number of underreplicated partitions across all topics on the broker
      included: true
      type: gauge
    gauge.kafka.fetch-consumer.total-time.99th:
      description: 99th percentile of time in milliseconds to process fetch requests
        from consumers
      included: true
      type: gauge
    gauge.kafka.fetch-consumer.total-time.median:
      description: Median time it takes to process a fetch request from consumers
      included: true
      type: gauge
    gauge.kafka.fetch-follower.total-time.99th:
      description: 99th percentile of time in milliseconds to process fetch requests
        from followers
      included: true
      type: gauge
    gauge.kafka.fetch-follower.total-time.median:
      description: Median time it takes to process a fetch request from follower
      included: true
      type: gauge
    counter.kafka-isr-expands:
      description: When a broker is brought up after a failure, it starts catching
        up by reading from the leader. Once it is caught up, it gets added back to
        the ISR.
      included: true
      type: cumulative
    counter.kafka-isr-shrinks:
      description: When a broker goes down, ISR for some of partitions will shrink.
        When that broker is up again, ISR will be expanded once the replicas are fully
        caught up. Other than that, the expected value for both ISR shrink rate and
        expansion rate is 0.
      included: true
      type: cumulative
    counter.kafka-leader-election-rate:
      description: Number of leader elections
      included: false
      type: cumulative
    gauge.kafka-max-lag:
      description: Maximum lag in messages between the follower and leader replicas
      included: true
      type: gauge
    gauge.kafka-offline-partitions-count:
      description: Number of partitions that donâ€™t have an active leader and are hence
        not writable or readable
      included: true
      type: gauge
    counter.kafka-unclean-elections-rate:
      description: Number of unclean leader elections. This happens when a leader
        goes down and an out-of-sync replica is chosen to be the leader
      included: true
      type: cumulative
  monitorType: collectd/kafka
  properties:
