version: 2
options:
  # optional, activate this if you need to debug something, default is false
  # IMPORTANT: do not run stable with this, it creates a memory leak, turn off verbose when you are done testing
  verbose: false

  # optional, default: pwd, root directory to be used when transforming sync src into absolute path, accepted values: pwd (current working directory), config_path (the directory where docker-sync.yml is found)
  project_root: pwd

syncs:
  signalfx-agent-sync:
    # os aware sync strategy, defaults to native_osx under MacOS (except with docker-machine which use unison), and native docker volume under linux
    # remove this option to use the default strategy per os or set a specific one
    sync_strategy: native_osx

    # which folder to watch / sync from - you can use tilde, it will get expanded.
    # the contents of this directory will be synchronized to the Docker volume with the name of this sync entry ('signalfx-agent' here)
    src: './'

    host_disk_mount_mode: cached # see https://docs.docker.com/docker-for-mac/osxfs-caching/#cached

    # other unison options can also be specified here, which will be used when run under osx,
    # and ignored when run under linux

    sync_excludes:
    - Path .git
    - Path signalfx-agent
    - Path internal/monitors/zcodegen/monitor-code-gen
    - Path scripts/windows/vagrant/boxcutter
    - Name __pycache__
    - Name *.exe
    - Name *.tar.gz
    - Name .idea
    - Name .DS_Store

    # use this to change the exclude syntax.
    # Path: you match the exact path ( nesting problem )
    # Name: If a file or a folder does match this string ( solves nesting problem )
    # Regex: Define a regular expression
    # none: You can define a type for each sync exclude, so sync_excludes: ['Name .git', 'Path Gemlock']
    #
    # for more see http://www.cis.upenn.edu/~bcpierce/unison/download/releases/stable/unison-manual.html#pathspec
    sync_excludes_type: none

    # monit can be used to monitor the health of unison in the native_osx strategy and can restart unison if it detects a problem
    # optional: use this to switch monit monitoring on
    monit_enable: true
    # optional: use this to change how many seconds between each monit check (cycle)
    monit_interval: 3
    # optional: use this to change how many consecutive times high cpu usage must be observed before unison is restarted
    monit_high_cpu_cycles: 2
